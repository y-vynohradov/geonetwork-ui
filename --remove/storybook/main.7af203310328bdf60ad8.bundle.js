(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{113:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return TextInputComponent}));var _a,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),rxjs_operators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(130),rxjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(15),rxjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(7);let TextInputComponent=class TextInputComponent{constructor(){this.value="",this.rawChange=new rxjs__WEBPACK_IMPORTED_MODULE_3__.a}ngOnInit(){this.valueChange=this.rawChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)())}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",Object)],TextInputComponent.prototype,"value",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",String)],TextInputComponent.prototype,"hint",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type","function"==typeof(_a=void 0!==rxjs__WEBPACK_IMPORTED_MODULE_4__.a&&rxjs__WEBPACK_IMPORTED_MODULE_4__.a)?_a:Object)],TextInputComponent.prototype,"valueChange",void 0),TextInputComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ui-text-input",template:(__webpack_require__(218).default||__webpack_require__(218)).length?__webpack_require__(218).default||__webpack_require__(218):"",styles:[(__webpack_require__(219).default||__webpack_require__(219)).length?__webpack_require__(219).default||__webpack_require__(219):""]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[])],TextInputComponent)},125:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DropdownSelectorComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);let DropdownSelectorComponent=class DropdownSelectorComponent{constructor(){this.selectValue=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter}get id(){return this.title.toLowerCase().replace(/[^a-z]+/g,"-")}ngOnInit(){}isSelected(choice){return choice.value===this.selected}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",String)],DropdownSelectorComponent.prototype,"title",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",String)],DropdownSelectorComponent.prototype,"ariaName",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",Array)],DropdownSelectorComponent.prototype,"choices",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",Object)],DropdownSelectorComponent.prototype,"selected",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",Object)],DropdownSelectorComponent.prototype,"selectValue",void 0),DropdownSelectorComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ui-dropdown-selector",template:(__webpack_require__(210).default||__webpack_require__(210)).length?__webpack_require__(210).default||__webpack_require__(210):"",styles:[(__webpack_require__(211).default||__webpack_require__(211)).length?__webpack_require__(211).default||__webpack_require__(211):""],changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[])],DropdownSelectorComponent)},131:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SearchSnapshotWcComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);let SearchSnapshotWcComponent=class SearchSnapshotWcComponent{constructor(){}ngOnInit(){}};SearchSnapshotWcComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"app-search-snapshot-wc",template:(__webpack_require__(222).default||__webpack_require__(222)).length?__webpack_require__(222).default||__webpack_require__(222):"",styles:[(__webpack_require__(223).default||__webpack_require__(223)).length?__webpack_require__(223).default||__webpack_require__(223):""],changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush,encapsulation:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewEncapsulation.ShadowDom}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[])],SearchSnapshotWcComponent)},132:function(module,__webpack_exports__,__webpack_require__){"use strict";var _lib_gn_api_module__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(418);__webpack_require__.d(__webpack_exports__,"GnApiModule",(function(){return _lib_gn_api_module__WEBPACK_IMPORTED_MODULE_0__.a}));var _lib_openapi___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(419);__webpack_require__.o(_lib_openapi___WEBPACK_IMPORTED_MODULE_1__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _lib_openapi___WEBPACK_IMPORTED_MODULE_1__.BASE_PATH})),__webpack_require__.o(_lib_openapi___WEBPACK_IMPORTED_MODULE_1__,"SearchApiService")&&__webpack_require__.d(__webpack_exports__,"SearchApiService",(function(){return _lib_openapi___WEBPACK_IMPORTED_MODULE_1__.SearchApiService}))},175:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AutocompleteComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),rxjs_operators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(301),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(130),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(306),rxjs_operators__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(112);let AutocompleteComponent=class AutocompleteComponent{constructor(){this.changed=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.autocomplete=text$=>text$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(200),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(()=>this.searching=!0),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.a)(term=>this.action()))}ngOnInit(){}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",String)],AutocompleteComponent.prototype,"placeholder",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",Function)],AutocompleteComponent.prototype,"action",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",Object)],AutocompleteComponent.prototype,"changed",void 0),AutocompleteComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ui-autocomplete",template:(__webpack_require__(212).default||__webpack_require__(212)).length?__webpack_require__(212).default||__webpack_require__(212):"",styles:[(__webpack_require__(213).default||__webpack_require__(213)).length?__webpack_require__(213).default||__webpack_require__(213):""],changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[])],AutocompleteComponent)},176:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return RecordSummaryComponent}));var _a,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);let RecordSummaryComponent=class RecordSummaryComponent{constructor(){}ngOnInit(){}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type","function"==typeof(_a="undefined"!=typeof RecordSimple&&RecordSimple)?_a:Object)],RecordSummaryComponent.prototype,"record",void 0),RecordSummaryComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ui-record-summary",template:(__webpack_require__(214).default||__webpack_require__(214)).length?__webpack_require__(214).default||__webpack_require__(214):"",styles:[(__webpack_require__(215).default||__webpack_require__(215)).length?__webpack_require__(215).default||__webpack_require__(215):""]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[])],RecordSummaryComponent)},210:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="flex flex-row items-center relative">\n  <label\n    class="block uppercase tracking-wide text-gray-800 text-xs font-bold mr-2 whitespace-no-wrap"\n    [attr.for]="id"\n  >\n    {{ title }}\n  </label>\n  <select\n    [id]="id"\n    (change)="this.selectValue.emit($event.target.value)"\n    class="block w-full appearance-none bg-gray-200 border border-gray-800 text-gray-800 py-2 px-3 pr-6 rounded leading-tight focus:outline-none focus:bg-background focus:border-gray-900"\n  >\n    <option\n      *ngFor="let choice of choices"\n      [value]="choice.value"\n      [selected]="isSelected(choice)"\n    >\n      {{ choice.label }}\n    </option>\n  </select>\n  <div\n    class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-800"\n  >\n    <svg\n      class="fill-current h-4 w-4"\n      xmlns="http://www.w3.org/2000/svg"\n      viewBox="0 0 20 20"\n    >\n      <path\n        d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"\n      ></path>\n    </svg>\n  </div>\n</div>\n'},211:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},212:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="form-group">\n  <input\n    type="text"\n    class="form-control form-control-lg"\n    [placeholder]="placeholder"\n  />\n</div>\n'},213:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},214:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<a\n  class="w-full h-full block rounded overflow-hidden shadow-md border-b-4 border-secondary hover:bg-button-default hover:shadow-lg hover:shadow-outline overflow-hidden transition duration-100"\n  [href]="record.url"\n>\n  <div\n    class="w-full h-32 bg-gray-300 bg-cover bg-center bg-no-repeat"\n    [ngStyle]="{\n      backgroundImage: \'url(\' + record.thumbnailUrl + \')\'\n    }"\n  ></div>\n  <div class="h-full px-6 py-4 flex flex-col">\n    <div class="font-bold text-lg mb-2 flex-shrink-0">{{ record.title }}</div>\n    <p class="text-gray-800 text-base">\n      {{ record.abstract }}\n    </p>\n  </div>\n</a>\n'},215:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},216:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<button\n  type="button"\n  class="{{ color }} {{ hoverColor }} {{\n    textColor\n  }} font-bold py-2 px-4 rounded"\n>\n  <ng-content></ng-content>\n</button>\n'},217:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},218:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<input\n  class="bg-gray-200 appearance-none border border-gray-800 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-background focus:border-gray-900"\n  type="text"\n  [value]="value"\n  (change)="rawChange.next($event.target.value)"\n  (input)="rawChange.next($event.target.value)"\n  [placeholder]="hint"\n  [attr.aria-label]="hint"\n/>\n'},219:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},220:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="flex flex-row items-center">\n  <div class="text-xs text-gray-700 font-bold m-2 w-32 text-right">\n    primary\n  </div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-primary-darkest"\n    title="primary-darkest"\n  ></div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-primary-darker"\n    title="primary-darker"\n  ></div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-primary border-2 border-primary-darkest"\n    title="primary"\n  ></div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-primary-lighter"\n    title="primary-lighter"\n  ></div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-primary-lightest"\n    title="primary-lightest"\n  ></div>\n</div>\n<div class="flex flex-row">\n  <div class="text-xs text-gray-700 font-bold m-2 w-32 text-right">\n    secondary\n  </div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-secondary-darkest"\n    title="secondary-darkest"\n  ></div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-secondary-darker"\n    title="secondary-darker"\n  ></div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-secondary border-2 border-secondary-darkest"\n    title="secondary"\n  ></div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-secondary-lighter"\n    title="secondary-lighter"\n  ></div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-secondary-lightest"\n    title="secondary-lightest"\n  ></div>\n</div>\n<div class="flex flex-row">\n  <div class="text-xs text-gray-700 font-bold m-2 w-32 text-right">\n    background to main\n  </div>\n  <div\n    class="shadow-md rounded w-6 h-6 m-2 bg-background"\n    title="background"\n  ></div>\n  <div\n    *ngFor="let i of [1, 2, 3, 4, 5, 6, 7, 8, 9]"\n    class="shadow-md rounded w-6 h-6 m-2 bg-gray-{{ i }}00"\n    title="bg-gray-{{ i }}00"\n  ></div>\n  <div class="shadow-md rounded w-6 h-6 m-2 bg-main" title="main"></div>\n</div>\n'},221:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},222:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<search-results-list></search-results-list>\n"},223:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='/* import tailwind styles */\n\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n  padding: 0;\n}\n\n/**\n * Work around a Firefox/IE bug where the transparent `button` background\n * results in a loss of the default `button` focus styles.\n */\n\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user\'s configured `sans` font-family (with Tailwind\'s default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind\'s default "normal" line-height so the user isn\'t forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it\'s border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e2e8f0; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  color: #a0aec0;\n}\n\ninput::-ms-input-placeholder, textarea::-ms-input-placeholder {\n  color: #a0aec0;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  color: #a0aec0;\n}\n\nbutton,\n[role="button"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don\'t inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured \'mono\' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * \'mono\' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;\n}\n\n/**\n * Make replaced elements `display: block` by default as that\'s\n * the behavior you want almost all of the time. Inspired by\n * CSS Remedy, with `svg` added as well.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their instrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* tailwind start components */\n\n.container {\n  width: 100%;\n}\n\n@media (min-width: 640px) {\n  .container {\n    max-width: 640px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    max-width: 1024px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .container {\n    max-width: 1280px;\n  }\n}\n\n/* tailwind end components */\n\n.appearance-none {\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n}\n\n.bg-gray-200 {\n  --bg-opacity: 1;\n  background-color: #edf2f7;\n  background-color: rgba(237, 242, 247, var(--bg-opacity));\n}\n\n.bg-gray-300 {\n  --bg-opacity: 1;\n  background-color: #e2e8f0;\n  background-color: rgba(226, 232, 240, var(--bg-opacity));\n}\n\n.bg-gray-500 {\n  --bg-opacity: 1;\n  background-color: #a0aec0;\n  background-color: rgba(160, 174, 192, var(--bg-opacity));\n}\n\n.bg-primary {\n  background-color: var(--color-primary);\n}\n\n.bg-primary-lighter {\n  background-color: var(--color-primary-lighter);\n}\n\n.bg-primary-lightest {\n  background-color: var(--color-primary-lightest);\n}\n\n.bg-primary-darker {\n  background-color: var(--color-primary-darker);\n}\n\n.bg-primary-darkest {\n  background-color: var(--color-primary-darkest);\n}\n\n.bg-secondary {\n  background-color: var(--color-secondary);\n}\n\n.bg-secondary-lighter {\n  background-color: var(--color-secondary-lighter);\n}\n\n.bg-secondary-lightest {\n  background-color: var(--color-secondary-lightest);\n}\n\n.bg-secondary-darker {\n  background-color: var(--color-secondary-darker);\n}\n\n.bg-secondary-darkest {\n  background-color: var(--color-secondary-darkest);\n}\n\n.bg-main {\n  background-color: var(--color-main);\n}\n\n.bg-background {\n  background-color: var(--color-background);\n}\n\n.focus\\:bg-background:focus {\n  background-color: var(--color-background);\n}\n\n.bg-center {\n  background-position: center;\n}\n\n.bg-no-repeat {\n  background-repeat: no-repeat;\n}\n\n.bg-cover {\n  background-size: cover;\n}\n\n.border-gray-800 {\n  --border-opacity: 1;\n  border-color: #2d3748;\n  border-color: rgba(45, 55, 72, var(--border-opacity));\n}\n\n.border-primary-darkest {\n  border-color: var(--color-primary-darkest);\n}\n\n.border-secondary {\n  border-color: var(--color-secondary);\n}\n\n.border-secondary-darkest {\n  border-color: var(--color-secondary-darkest);\n}\n\n.focus\\:border-gray-900:focus {\n  --border-opacity: 1;\n  border-color: #1a202c;\n  border-color: rgba(26, 32, 44, var(--border-opacity));\n}\n\n.rounded {\n  border-radius: 0.25rem;\n}\n\n.border-2 {\n  border-width: 2px;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-b-4 {\n  border-bottom-width: 4px;\n}\n\n.block {\n  display: block;\n}\n\n.flex {\n  display: flex;\n}\n\n.table {\n  display: table;\n}\n\n.grid {\n  display: grid;\n}\n\n.flex-row {\n  flex-direction: row;\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.flex-grow {\n  flex-grow: 1;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.h-4 {\n  height: 1rem;\n}\n\n.h-6 {\n  height: 1.5rem;\n}\n\n.h-32 {\n  height: 8rem;\n}\n\n.h-full {\n  height: 100%;\n}\n\n.text-xs {\n  font-size: 0.75rem;\n}\n\n.text-base {\n  font-size: 1rem;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n}\n\n.text-3xl {\n  font-size: 1.875rem;\n}\n\n.leading-tight {\n  line-height: 1.25;\n}\n\n.m-2 {\n  margin: 0.5rem;\n}\n\n.mx-4 {\n  margin-left: 1rem;\n  margin-right: 1rem;\n}\n\n.mr-2 {\n  margin-right: 0.5rem;\n}\n\n.mb-2 {\n  margin-bottom: 0.5rem;\n}\n\n.mr-3 {\n  margin-right: 0.75rem;\n}\n\n.mb-3 {\n  margin-bottom: 0.75rem;\n}\n\n.focus\\:outline-none:focus {\n  outline: 0;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.p-5 {\n  padding: 1.25rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.px-2 {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.px-3 {\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n}\n\n.py-4 {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.px-6 {\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n}\n\n.pr-6 {\n  padding-right: 1.5rem;\n}\n\n.pointer-events-none {\n  pointer-events: none;\n}\n\n.static {\n  position: static;\n}\n\n.absolute {\n  position: absolute;\n}\n\n.relative {\n  position: relative;\n}\n\n.inset-y-0 {\n  top: 0;\n  bottom: 0;\n}\n\n.right-0 {\n  right: 0;\n}\n\n.shadow-md {\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n.hover\\:shadow-lg:hover {\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n}\n\n.hover\\:shadow-outline:hover {\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5);\n}\n\n.fill-current {\n  fill: currentColor;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.text-gray-700 {\n  --text-opacity: 1;\n  color: #4a5568;\n  color: rgba(74, 85, 104, var(--text-opacity));\n}\n\n.text-gray-800 {\n  --text-opacity: 1;\n  color: #2d3748;\n  color: rgba(45, 55, 72, var(--text-opacity));\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n\n.tracking-wide {\n  letter-spacing: 0.025em;\n}\n\n.whitespace-no-wrap {\n  white-space: nowrap;\n}\n\n.w-4 {\n  width: 1rem;\n}\n\n.w-6 {\n  width: 1.5rem;\n}\n\n.w-32 {\n  width: 8rem;\n}\n\n.w-4\\/5 {\n  width: 80%;\n}\n\n.w-full {\n  width: 100%;\n}\n\n.gap-4 {\n  grid-gap: 1rem;\n  gap: 1rem;\n}\n\n.transition {\n  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;\n}\n\n.duration-100 {\n  transition-duration: 100ms;\n}\n\n@media (min-width: 768px) {\n  .md\\:grid-cols-3 {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n}\n\n@media (min-width: 1024px) {\n  .lg\\:grid-cols-4 {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n}\n\nbody {\n  background-color: var(--color-background);\n}\n'},224:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<ui-dropdown-selector\n  title="Sort by"\n  [choices]="choices"\n  (selectValue)="changeSortBy($event)"\n  [selected]="currentSortBy$ | async"\n  ariaName="search-sort-by"\n></ui-dropdown-selector>\n'},225:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<ui-text-input\n  #searchText\n  hint="Find your metadata"\n  [value]="currentTextSearch$ | async"\n></ui-text-input>\n'},226:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},227:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="grid md:grid-cols-3 lg:grid-cols-4 gap-4 p-4">\n  <ui-record-summary\n    style="height: 24rem;"\n    *ngFor="let record of results$ | async"\n    [record]="record"\n  ></ui-record-summary>\n</div>\n<div *ngIf="isLoading$ | async">Loading more results...</div>\n'},228:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},242:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ButtonComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);let ButtonComponent=class ButtonComponent{constructor(){this.type="default"}get color(){switch(this.type){case"default":return"bg-button-default";case"primary":return"bg-button-primary";case"secondary":return"bg-button-secondary"}}get hoverColor(){switch(this.type){case"default":return"hover:bg-button-default-hover";case"primary":return"hover:bg-button-primary-hover";case"secondary":return"hover:bg-button-secondary-hover"}}get textColor(){switch(this.type){case"default":return"text-button-text-default-hover";case"secondary":return"text-button-text-secondary-hover";case"primary":return"text-button-text-primary"}}ngOnInit(){}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:type",String)],ButtonComponent.prototype,"type",void 0),ButtonComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ui-button",template:(__webpack_require__(216).default||__webpack_require__(216)).length?__webpack_require__(216).default||__webpack_require__(216):"",styles:[(__webpack_require__(217).default||__webpack_require__(217)).length?__webpack_require__(217).default||__webpack_require__(217):""]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[])],ButtonComponent)},243:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ColorScaleComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);let ColorScaleComponent=class ColorScaleComponent{constructor(){}ngOnInit(){}};ColorScaleComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ui-color-scale",template:(__webpack_require__(220).default||__webpack_require__(220)).length?__webpack_require__(220).default||__webpack_require__(220):"",styles:[(__webpack_require__(221).default||__webpack_require__(221)).length?__webpack_require__(221).default||__webpack_require__(221):""]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[])],ColorScaleComponent)},245:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return app_module_AppModule}));var tslib_es6=__webpack_require__(1),core=__webpack_require__(0),fesm2015_elements=__webpack_require__(532),search_snapshot_wc_component=__webpack_require__(131),fesm5_store=__webpack_require__(16);const SORT_BY="[Search] Sort By";class UpdateParams{constructor(payload){this.payload=payload,this.type="[Search] Update Params"}}class SortBy{constructor(sortBy){this.sortBy=sortBy,this.type=SORT_BY}}class AddResults{constructor(payload){this.payload=payload,this.type="[Search] Add Results"}}class ClearResults{constructor(){this.type="[Search] Clear Results"}}class RequestMoreResults{constructor(){this.type="[Search] Request More Results"}}const initialState={params:{},results:[],loadingMore:!1};const getSearchState=Object(fesm5_store.h)("searchState"),getSearchParams=Object(fesm5_store.i)(getSearchState,state=>state.params),getSearchSortBy=Object(fesm5_store.i)(getSearchState,state=>state.sortBy),getSearchResults=Object(fesm5_store.i)(getSearchState,state=>state.results),getSearchResultsLoading=Object(fesm5_store.i)(getSearchState,state=>state.loadingMore);var _a;let sort_by_component_SortByComponent=class SortByComponent{constructor(store){this.store=store,this.choices=[{label:"last changed",value:"dateStamp"},{label:"popularity",value:"popularity"}],this.currentSortBy$=this.store.pipe(Object(fesm5_store.j)(getSearchSortBy))}ngOnInit(){}changeSortBy(criteria){if("string"!=typeof criteria)throw new Error(`Unexpected value received: ${criteria}`);this.store.dispatch(new SortBy(criteria))}};sort_by_component_SortByComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"search-sort-by",template:(__webpack_require__(224).default||__webpack_require__(224)).length?__webpack_require__(224).default||__webpack_require__(224):""}),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(_a=void 0!==fesm5_store.b&&fesm5_store.b)?_a:Object])],sort_by_component_SortByComponent);var fuzzy_search_component_a,_b,src=__webpack_require__(85),common=__webpack_require__(13),Subscription=__webpack_require__(14),map=__webpack_require__(18),debounceTime=__webpack_require__(301),text_input_component=__webpack_require__(113);let fuzzy_search_component_FuzzySearchComponent=class FuzzySearchComponent{constructor(store){this.store=store,this.currentTextSearch$=this.store.pipe(Object(fesm5_store.j)(getSearchParams),Object(map.a)(params=>params.any||"")),this.subs=new Subscription.a}ngAfterViewInit(){this.subs.add(this.searchText.valueChange.pipe(Object(debounceTime.a)(400)).subscribe(value=>{this.store.dispatch(new UpdateParams({any:value}))}))}ngOnDestroy(){this.subs.unsubscribe()}};Object(tslib_es6.b)([Object(core.ViewChild)("searchText"),Object(tslib_es6.d)("design:type","function"==typeof(fuzzy_search_component_a=void 0!==text_input_component.a&&text_input_component.a)?fuzzy_search_component_a:Object)],fuzzy_search_component_FuzzySearchComponent.prototype,"searchText",void 0),fuzzy_search_component_FuzzySearchComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"search-fuzzy-search",template:(__webpack_require__(225).default||__webpack_require__(225)).length?__webpack_require__(225).default||__webpack_require__(225):"",styles:[(__webpack_require__(226).default||__webpack_require__(226)).length?__webpack_require__(226).default||__webpack_require__(226):""],changeDetection:core.ChangeDetectionStrategy.OnPush}),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(_b=void 0!==fesm5_store.b&&fesm5_store.b)?_b:Object])],fuzzy_search_component_FuzzySearchComponent);var gn_api_src=__webpack_require__(132),effects=__webpack_require__(69),switchMap=__webpack_require__(112),withLatestFrom=__webpack_require__(307);var effects_a,effects_b,_c,of=__webpack_require__(82);let effects_SearchEffects=class SearchEffects{constructor(actions$,searchService,store$){this.actions$=actions$,this.searchService=searchService,this.store$=store$,this.clearResults$=Object(effects.c)(()=>this.actions$.pipe(Object(effects.d)(SORT_BY,"[Search] Update Params"),Object(switchMap.a)(()=>Object(of.a)(new ClearResults,new RequestMoreResults)))),this.loadResults$=Object(effects.c)(()=>this.actions$.pipe(Object(effects.d)("[Search] Request More Results"),Object(withLatestFrom.a)(this.store$.pipe(Object(fesm5_store.j)(getSearchSortBy)),this.store$.pipe(Object(fesm5_store.j)(getSearchParams))),Object(switchMap.a)(([_,sortBy,params])=>this.searchService.call("_search","bucket",JSON.stringify({from:0,size:10,sort:sortBy?[sortBy]:void 0,query:{bool:{must:[{query_string:{query:params.any||"*"}}]}}}))),Object(map.a)(response=>response.hits.hits.map(hit=>({title:hit._source.resourceTitleObject?hit._source.resourceTitleObject.default:"no title",abstract:hit._source.resourceAbstractObject?hit._source.resourceAbstractObject.default:"no abstract",thumbnailUrl:hit._source.overview?hit._source.overview.url:"",url:`/geonetwork/srv/eng/catalog.search#/metadata/${hit._source.uuid}`}))),Object(map.a)(records=>new AddResults(records))))}};effects_SearchEffects=Object(tslib_es6.b)([Object(core.Injectable)(),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(effects_a=void 0!==effects.a&&effects.a)?effects_a:Object,"function"==typeof(effects_b=void 0!==gn_api_src.SearchApiService&&gn_api_src.SearchApiService)?effects_b:Object,"function"==typeof(_c=void 0!==fesm5_store.b&&fesm5_store.b)?_c:Object])],effects_SearchEffects);var results_list_component_a,http=__webpack_require__(2);let results_list_component_ResultsListComponent=class ResultsListComponent{constructor(store){this.store=store,this.results$=this.store.pipe(Object(fesm5_store.j)(getSearchResults)),this.isLoading$=this.store.pipe(Object(fesm5_store.j)(getSearchResultsLoading))}ngOnInit(){this.store.dispatch(new RequestMoreResults)}};results_list_component_ResultsListComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"search-results-list",template:(__webpack_require__(227).default||__webpack_require__(227)).length?__webpack_require__(227).default||__webpack_require__(227):"",styles:[(__webpack_require__(228).default||__webpack_require__(228)).length?__webpack_require__(228).default||__webpack_require__(228):""]}),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(results_list_component_a=void 0!==fesm5_store.b&&fesm5_store.b)?results_list_component_a:Object])],results_list_component_ResultsListComponent);let LibSearchModule=class LibSearchModule{};var app_module_a;LibSearchModule=Object(tslib_es6.b)([Object(core.NgModule)({declarations:[sort_by_component_SortByComponent,fuzzy_search_component_FuzzySearchComponent,results_list_component_ResultsListComponent],imports:[common.a,fesm5_store.d.forFeature("searchState",(function reducer(state=initialState,action){switch(action.type){case"[Search] Update Params":return Object.assign(Object.assign({},state),{params:Object.assign({},action.payload)});case SORT_BY:return Object.assign(Object.assign({},state),{sortBy:action.sortBy});case"[Search] Add Results":return Object.assign(Object.assign({},state),{results:[...state.results,...action.payload],loadingMore:!1});case"[Search] Clear Results":return Object.assign(Object.assign({},state),{results:[]});case"[Search] Request More Results":return Object.assign(Object.assign({},state),{loadingMore:!0})}return state}),{initialState:initialState}),effects.b.forFeature([effects_SearchEffects]),http.b,src.a,gn_api_src.GnApiModule],exports:[sort_by_component_SortByComponent,fuzzy_search_component_FuzzySearchComponent,results_list_component_ResultsListComponent]})],LibSearchModule);let app_module_AppModule=class AppModule{constructor(injector){this.injector=injector;const customButton=Object(fesm2015_elements.a)(search_snapshot_wc_component.a,{injector:injector});customElements.define("gn-search-snapshot",customButton)}ngDoBootstrap(){}};app_module_AppModule=Object(tslib_es6.b)([Object(core.NgModule)({declarations:[search_snapshot_wc_component.a],imports:[LibSearchModule,fesm5_store.d.forRoot({}),effects.b.forRoot()],providers:[{provide:gn_api_src.BASE_PATH,useValue:"https://apps.titellus.net/geonetwork/srv/api"}]}),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(app_module_a=void 0!==core.Injector&&core.Injector)?app_module_a:Object])],app_module_AppModule)},4:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Configuration}));class Configuration{constructor(configurationParameters={}){this.apiKeys=configurationParameters.apiKeys,this.username=configurationParameters.username,this.password=configurationParameters.password,this.accessToken=configurationParameters.accessToken,this.basePath=configurationParameters.basePath,this.withCredentials=configurationParameters.withCredentials,this.encoder=configurationParameters.encoder}selectHeaderContentType(contentTypes){if(0===contentTypes.length)return;const type=contentTypes.find(x=>this.isJsonMime(x));return void 0===type?contentTypes[0]:type}selectHeaderAccept(accepts){if(0===accepts.length)return;const type=accepts.find(x=>this.isJsonMime(x));return void 0===type?accepts[0]:type}isJsonMime(mime){const jsonMime=new RegExp("^(application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(;.*)?$","i");return null!==mime&&(jsonMime.test(mime)||"application/json-patch+json"===mime.toLowerCase())}}},414:function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id=414},418:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return GnApiModule}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);let GnApiModule=class GnApiModule{};GnApiModule=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({declarations:[],imports:[],exports:[]})],GnApiModule)},419:function(module,__webpack_exports__,__webpack_require__){"use strict";var _api_api__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(530);__webpack_require__.d(__webpack_exports__,"SearchApiService",(function(){return _api_api__WEBPACK_IMPORTED_MODULE_0__.a}));var _model_models__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(420);__webpack_require__.o(_model_models__WEBPACK_IMPORTED_MODULE_1__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _model_models__WEBPACK_IMPORTED_MODULE_1__.BASE_PATH}));var _variables__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(8);__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _variables__WEBPACK_IMPORTED_MODULE_2__.a}));__webpack_require__(4),__webpack_require__(527)},420:function(module,__webpack_exports__,__webpack_require__){"use strict";var _address_api_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(421);__webpack_require__.o(_address_api_model__WEBPACK_IMPORTED_MODULE_0__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _address_api_model__WEBPACK_IMPORTED_MODULE_0__.BASE_PATH}));var _anonymousMapserver_api_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(422);__webpack_require__.o(_anonymousMapserver_api_model__WEBPACK_IMPORTED_MODULE_1__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _anonymousMapserver_api_model__WEBPACK_IMPORTED_MODULE_1__.BASE_PATH}));var _associated_api_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(423);__webpack_require__.o(_associated_api_model__WEBPACK_IMPORTED_MODULE_2__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _associated_api_model__WEBPACK_IMPORTED_MODULE_2__.BASE_PATH}));var _associatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(424);__webpack_require__.o(_associatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_3__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _associatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_3__.BASE_PATH}));var _attributeTable_api_model__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(425);__webpack_require__.o(_attributeTable_api_model__WEBPACK_IMPORTED_MODULE_4__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _attributeTable_api_model__WEBPACK_IMPORTED_MODULE_4__.BASE_PATH}));var _batchEditParameter_api_model__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(426);__webpack_require__.o(_batchEditParameter_api_model__WEBPACK_IMPORTED_MODULE_5__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _batchEditParameter_api_model__WEBPACK_IMPORTED_MODULE_5__.BASE_PATH}));var _batchEditing_api_model__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(427);__webpack_require__.o(_batchEditing_api_model__WEBPACK_IMPORTED_MODULE_6__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _batchEditing_api_model__WEBPACK_IMPORTED_MODULE_6__.BASE_PATH}));var _category_api_model__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(428);__webpack_require__.o(_category_api_model__WEBPACK_IMPORTED_MODULE_7__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _category_api_model__WEBPACK_IMPORTED_MODULE_7__.BASE_PATH}));var _categoryResponse_api_model__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(429);__webpack_require__.o(_categoryResponse_api_model__WEBPACK_IMPORTED_MODULE_8__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _categoryResponse_api_model__WEBPACK_IMPORTED_MODULE_8__.BASE_PATH}));var _children_api_model__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(430);__webpack_require__.o(_children_api_model__WEBPACK_IMPORTED_MODULE_9__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _children_api_model__WEBPACK_IMPORTED_MODULE_9__.BASE_PATH}));var _codelist_api_model__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(431);__webpack_require__.o(_codelist_api_model__WEBPACK_IMPORTED_MODULE_10__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _codelist_api_model__WEBPACK_IMPORTED_MODULE_10__.BASE_PATH}));var _crs_api_model__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(432);__webpack_require__.o(_crs_api_model__WEBPACK_IMPORTED_MODULE_11__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _crs_api_model__WEBPACK_IMPORTED_MODULE_11__.BASE_PATH}));var _dataset_api_model__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(433);__webpack_require__.o(_dataset_api_model__WEBPACK_IMPORTED_MODULE_12__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _dataset_api_model__WEBPACK_IMPORTED_MODULE_12__.BASE_PATH}));var _description_api_model__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(434);__webpack_require__.o(_description_api_model__WEBPACK_IMPORTED_MODULE_13__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _description_api_model__WEBPACK_IMPORTED_MODULE_13__.BASE_PATH}));var _element_api_model__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(435);__webpack_require__.o(_element_api_model__WEBPACK_IMPORTED_MODULE_14__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _element_api_model__WEBPACK_IMPORTED_MODULE_14__.BASE_PATH}));var _entry_api_model__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(436);__webpack_require__.o(_entry_api_model__WEBPACK_IMPORTED_MODULE_15__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _entry_api_model__WEBPACK_IMPORTED_MODULE_15__.BASE_PATH}));var _fCRelatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(437);__webpack_require__.o(_fCRelatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_16__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _fCRelatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_16__.BASE_PATH}));var _fcat_api_model__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(438);__webpack_require__.o(_fcat_api_model__WEBPACK_IMPORTED_MODULE_17__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _fcat_api_model__WEBPACK_IMPORTED_MODULE_17__.BASE_PATH}));var _featureResponse_api_model__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(439);__webpack_require__.o(_featureResponse_api_model__WEBPACK_IMPORTED_MODULE_18__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _featureResponse_api_model__WEBPACK_IMPORTED_MODULE_18__.BASE_PATH}));var _featureType_api_model__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(440);__webpack_require__.o(_featureType_api_model__WEBPACK_IMPORTED_MODULE_19__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _featureType_api_model__WEBPACK_IMPORTED_MODULE_19__.BASE_PATH}));var _field_api_model__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(441);__webpack_require__.o(_field_api_model__WEBPACK_IMPORTED_MODULE_20__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _field_api_model__WEBPACK_IMPORTED_MODULE_20__.BASE_PATH}));var _grantedAuthority_api_model__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(442);__webpack_require__.o(_grantedAuthority_api_model__WEBPACK_IMPORTED_MODULE_21__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _grantedAuthority_api_model__WEBPACK_IMPORTED_MODULE_21__.BASE_PATH}));var _group_api_model__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(443);__webpack_require__.o(_group_api_model__WEBPACK_IMPORTED_MODULE_22__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _group_api_model__WEBPACK_IMPORTED_MODULE_22__.BASE_PATH}));var _groupOperations_api_model__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(444);__webpack_require__.o(_groupOperations_api_model__WEBPACK_IMPORTED_MODULE_23__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _groupOperations_api_model__WEBPACK_IMPORTED_MODULE_23__.BASE_PATH}));__webpack_require__(445);var _hasfeaturecats_api_model__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__(446);__webpack_require__.o(_hasfeaturecats_api_model__WEBPACK_IMPORTED_MODULE_25__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _hasfeaturecats_api_model__WEBPACK_IMPORTED_MODULE_25__.BASE_PATH}));var _hassource_api_model__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__(447);__webpack_require__.o(_hassource_api_model__WEBPACK_IMPORTED_MODULE_26__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _hassource_api_model__WEBPACK_IMPORTED_MODULE_26__.BASE_PATH}));var _iProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__(448);__webpack_require__.o(_iProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_27__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _iProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_27__.BASE_PATH}));var _iSODate_api_model__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__(449);__webpack_require__.o(_iSODate_api_model__WEBPACK_IMPORTED_MODULE_28__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _iSODate_api_model__WEBPACK_IMPORTED_MODULE_28__.BASE_PATH}));var _infoReport_api_model__WEBPACK_IMPORTED_MODULE_29__=__webpack_require__(450);__webpack_require__.o(_infoReport_api_model__WEBPACK_IMPORTED_MODULE_29__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _infoReport_api_model__WEBPACK_IMPORTED_MODULE_29__.BASE_PATH}));var _inlineObject1_api_model__WEBPACK_IMPORTED_MODULE_30__=__webpack_require__(451);__webpack_require__.o(_inlineObject1_api_model__WEBPACK_IMPORTED_MODULE_30__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _inlineObject1_api_model__WEBPACK_IMPORTED_MODULE_30__.BASE_PATH}));var _inlineObject2_api_model__WEBPACK_IMPORTED_MODULE_31__=__webpack_require__(452);__webpack_require__.o(_inlineObject2_api_model__WEBPACK_IMPORTED_MODULE_31__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _inlineObject2_api_model__WEBPACK_IMPORTED_MODULE_31__.BASE_PATH}));var _inlineObject_api_model__WEBPACK_IMPORTED_MODULE_32__=__webpack_require__(453);__webpack_require__.o(_inlineObject_api_model__WEBPACK_IMPORTED_MODULE_32__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _inlineObject_api_model__WEBPACK_IMPORTED_MODULE_32__.BASE_PATH}));var _isoLanguage_api_model__WEBPACK_IMPORTED_MODULE_33__=__webpack_require__(454);__webpack_require__.o(_isoLanguage_api_model__WEBPACK_IMPORTED_MODULE_33__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _isoLanguage_api_model__WEBPACK_IMPORTED_MODULE_33__.BASE_PATH}));var _keywordBean_api_model__WEBPACK_IMPORTED_MODULE_34__=__webpack_require__(455);__webpack_require__.o(_keywordBean_api_model__WEBPACK_IMPORTED_MODULE_34__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _keywordBean_api_model__WEBPACK_IMPORTED_MODULE_34__.BASE_PATH}));__webpack_require__(456);var _linkStatus_api_model__WEBPACK_IMPORTED_MODULE_36__=__webpack_require__(457);__webpack_require__.o(_linkStatus_api_model__WEBPACK_IMPORTED_MODULE_36__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _linkStatus_api_model__WEBPACK_IMPORTED_MODULE_36__.BASE_PATH}));var _listRegionsResponse_api_model__WEBPACK_IMPORTED_MODULE_37__=__webpack_require__(458);__webpack_require__.o(_listRegionsResponse_api_model__WEBPACK_IMPORTED_MODULE_37__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _listRegionsResponse_api_model__WEBPACK_IMPORTED_MODULE_37__.BASE_PATH}));var _localizedString_api_model__WEBPACK_IMPORTED_MODULE_38__=__webpack_require__(459);__webpack_require__.o(_localizedString_api_model__WEBPACK_IMPORTED_MODULE_38__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _localizedString_api_model__WEBPACK_IMPORTED_MODULE_38__.BASE_PATH}));var _logFileResponse_api_model__WEBPACK_IMPORTED_MODULE_39__=__webpack_require__(460);__webpack_require__.o(_logFileResponse_api_model__WEBPACK_IMPORTED_MODULE_39__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _logFileResponse_api_model__WEBPACK_IMPORTED_MODULE_39__.BASE_PATH}));var _mapServer_api_model__WEBPACK_IMPORTED_MODULE_40__=__webpack_require__(461);__webpack_require__.o(_mapServer_api_model__WEBPACK_IMPORTED_MODULE_40__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _mapServer_api_model__WEBPACK_IMPORTED_MODULE_40__.BASE_PATH}));var _meResponse_api_model__WEBPACK_IMPORTED_MODULE_41__=__webpack_require__(462);__webpack_require__.o(_meResponse_api_model__WEBPACK_IMPORTED_MODULE_41__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _meResponse_api_model__WEBPACK_IMPORTED_MODULE_41__.BASE_PATH}));var _metadataCategory_api_model__WEBPACK_IMPORTED_MODULE_42__=__webpack_require__(463);__webpack_require__.o(_metadataCategory_api_model__WEBPACK_IMPORTED_MODULE_42__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataCategory_api_model__WEBPACK_IMPORTED_MODULE_42__.BASE_PATH}));var _metadataIdentifierTemplate_api_model__WEBPACK_IMPORTED_MODULE_43__=__webpack_require__(464);__webpack_require__.o(_metadataIdentifierTemplate_api_model__WEBPACK_IMPORTED_MODULE_43__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataIdentifierTemplate_api_model__WEBPACK_IMPORTED_MODULE_43__.BASE_PATH}));var _metadataLink_api_model__WEBPACK_IMPORTED_MODULE_44__=__webpack_require__(465);__webpack_require__.o(_metadataLink_api_model__WEBPACK_IMPORTED_MODULE_44__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataLink_api_model__WEBPACK_IMPORTED_MODULE_44__.BASE_PATH}));var _metadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_45__=__webpack_require__(466);__webpack_require__.o(_metadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_45__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_45__.BASE_PATH}));var _metadataReplacementProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_46__=__webpack_require__(467);__webpack_require__.o(_metadataReplacementProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_46__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataReplacementProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_46__.BASE_PATH}));__webpack_require__(468);var _metadataSchema_api_model__WEBPACK_IMPORTED_MODULE_48__=__webpack_require__(469);__webpack_require__.o(_metadataSchema_api_model__WEBPACK_IMPORTED_MODULE_48__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataSchema_api_model__WEBPACK_IMPORTED_MODULE_48__.BASE_PATH}));var _metadataStatus_api_model__WEBPACK_IMPORTED_MODULE_49__=__webpack_require__(470);__webpack_require__.o(_metadataStatus_api_model__WEBPACK_IMPORTED_MODULE_49__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataStatus_api_model__WEBPACK_IMPORTED_MODULE_49__.BASE_PATH}));var _metadataStatusId_api_model__WEBPACK_IMPORTED_MODULE_50__=__webpack_require__(471);__webpack_require__.o(_metadataStatusId_api_model__WEBPACK_IMPORTED_MODULE_50__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataStatusId_api_model__WEBPACK_IMPORTED_MODULE_50__.BASE_PATH}));var _metadataStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_51__=__webpack_require__(472);__webpack_require__.o(_metadataStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_51__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_51__.BASE_PATH}));var _metadataWorkflowStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_52__=__webpack_require__(473);__webpack_require__.o(_metadataWorkflowStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_52__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _metadataWorkflowStatusResponse_api_model__WEBPACK_IMPORTED_MODULE_52__.BASE_PATH}));var _multilingualValue_api_model__WEBPACK_IMPORTED_MODULE_53__=__webpack_require__(474);__webpack_require__.o(_multilingualValue_api_model__WEBPACK_IMPORTED_MODULE_53__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _multilingualValue_api_model__WEBPACK_IMPORTED_MODULE_53__.BASE_PATH}));var _online_api_model__WEBPACK_IMPORTED_MODULE_54__=__webpack_require__(475);__webpack_require__.o(_online_api_model__WEBPACK_IMPORTED_MODULE_54__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _online_api_model__WEBPACK_IMPORTED_MODULE_54__.BASE_PATH}));__webpack_require__(476);var _ownerResponse_api_model__WEBPACK_IMPORTED_MODULE_56__=__webpack_require__(477);__webpack_require__.o(_ownerResponse_api_model__WEBPACK_IMPORTED_MODULE_56__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _ownerResponse_api_model__WEBPACK_IMPORTED_MODULE_56__.BASE_PATH}));__webpack_require__(478);var _pageLink_api_model__WEBPACK_IMPORTED_MODULE_58__=__webpack_require__(479);__webpack_require__.o(_pageLink_api_model__WEBPACK_IMPORTED_MODULE_58__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _pageLink_api_model__WEBPACK_IMPORTED_MODULE_58__.BASE_PATH}));var _paginatedUserSearchResponse_api_model__WEBPACK_IMPORTED_MODULE_59__=__webpack_require__(480);__webpack_require__.o(_paginatedUserSearchResponse_api_model__WEBPACK_IMPORTED_MODULE_59__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _paginatedUserSearchResponse_api_model__WEBPACK_IMPORTED_MODULE_59__.BASE_PATH}));var _parent_api_model__WEBPACK_IMPORTED_MODULE_60__=__webpack_require__(481);__webpack_require__.o(_parent_api_model__WEBPACK_IMPORTED_MODULE_60__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _parent_api_model__WEBPACK_IMPORTED_MODULE_60__.BASE_PATH}));var _passwordUpdateParameter_api_model__WEBPACK_IMPORTED_MODULE_61__=__webpack_require__(482);__webpack_require__.o(_passwordUpdateParameter_api_model__WEBPACK_IMPORTED_MODULE_61__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _passwordUpdateParameter_api_model__WEBPACK_IMPORTED_MODULE_61__.BASE_PATH}));var _processingReport_api_model__WEBPACK_IMPORTED_MODULE_62__=__webpack_require__(483);__webpack_require__.o(_processingReport_api_model__WEBPACK_IMPORTED_MODULE_62__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _processingReport_api_model__WEBPACK_IMPORTED_MODULE_62__.BASE_PATH}));var _ratingAverage_api_model__WEBPACK_IMPORTED_MODULE_63__=__webpack_require__(484);__webpack_require__.o(_ratingAverage_api_model__WEBPACK_IMPORTED_MODULE_63__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _ratingAverage_api_model__WEBPACK_IMPORTED_MODULE_63__.BASE_PATH}));var _ratingCriteria_api_model__WEBPACK_IMPORTED_MODULE_64__=__webpack_require__(485);__webpack_require__.o(_ratingCriteria_api_model__WEBPACK_IMPORTED_MODULE_64__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _ratingCriteria_api_model__WEBPACK_IMPORTED_MODULE_64__.BASE_PATH}));var _regionResponse_api_model__WEBPACK_IMPORTED_MODULE_65__=__webpack_require__(486);__webpack_require__.o(_regionResponse_api_model__WEBPACK_IMPORTED_MODULE_65__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _regionResponse_api_model__WEBPACK_IMPORTED_MODULE_65__.BASE_PATH}));var _related_api_model__WEBPACK_IMPORTED_MODULE_66__=__webpack_require__(487);__webpack_require__.o(_related_api_model__WEBPACK_IMPORTED_MODULE_66__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _related_api_model__WEBPACK_IMPORTED_MODULE_66__.BASE_PATH}));var _relatedLinkItem_api_model__WEBPACK_IMPORTED_MODULE_67__=__webpack_require__(488);__webpack_require__.o(_relatedLinkItem_api_model__WEBPACK_IMPORTED_MODULE_67__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _relatedLinkItem_api_model__WEBPACK_IMPORTED_MODULE_67__.BASE_PATH}));var _relatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_68__=__webpack_require__(489);__webpack_require__.o(_relatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_68__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _relatedMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_68__.BASE_PATH}));var _relatedResponse_api_model__WEBPACK_IMPORTED_MODULE_69__=__webpack_require__(490);__webpack_require__.o(_relatedResponse_api_model__WEBPACK_IMPORTED_MODULE_69__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _relatedResponse_api_model__WEBPACK_IMPORTED_MODULE_69__.BASE_PATH}));var _relatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_70__=__webpack_require__(491);__webpack_require__.o(_relatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_70__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _relatedSiblingMetadataItem_api_model__WEBPACK_IMPORTED_MODULE_70__.BASE_PATH}));var _relatedThumbnailItem_api_model__WEBPACK_IMPORTED_MODULE_71__=__webpack_require__(492);__webpack_require__.o(_relatedThumbnailItem_api_model__WEBPACK_IMPORTED_MODULE_71__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _relatedThumbnailItem_api_model__WEBPACK_IMPORTED_MODULE_71__.BASE_PATH}));var _replaceEntryChange_api_model__WEBPACK_IMPORTED_MODULE_72__=__webpack_require__(493);__webpack_require__.o(_replaceEntryChange_api_model__WEBPACK_IMPORTED_MODULE_72__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _replaceEntryChange_api_model__WEBPACK_IMPORTED_MODULE_72__.BASE_PATH}));var _replaceReport_api_model__WEBPACK_IMPORTED_MODULE_73__=__webpack_require__(494);__webpack_require__.o(_replaceReport_api_model__WEBPACK_IMPORTED_MODULE_73__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _replaceReport_api_model__WEBPACK_IMPORTED_MODULE_73__.BASE_PATH}));var _report_api_model__WEBPACK_IMPORTED_MODULE_74__=__webpack_require__(495);__webpack_require__.o(_report_api_model__WEBPACK_IMPORTED_MODULE_74__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _report_api_model__WEBPACK_IMPORTED_MODULE_74__.BASE_PATH}));var _reports_api_model__WEBPACK_IMPORTED_MODULE_75__=__webpack_require__(496);__webpack_require__.o(_reports_api_model__WEBPACK_IMPORTED_MODULE_75__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _reports_api_model__WEBPACK_IMPORTED_MODULE_75__.BASE_PATH}));var _savedQuery_api_model__WEBPACK_IMPORTED_MODULE_76__=__webpack_require__(497);__webpack_require__.o(_savedQuery_api_model__WEBPACK_IMPORTED_MODULE_76__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _savedQuery_api_model__WEBPACK_IMPORTED_MODULE_76__.BASE_PATH}));var _section_api_model__WEBPACK_IMPORTED_MODULE_77__=__webpack_require__(498);__webpack_require__.o(_section_api_model__WEBPACK_IMPORTED_MODULE_77__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _section_api_model__WEBPACK_IMPORTED_MODULE_77__.BASE_PATH}));var _selection_api_model__WEBPACK_IMPORTED_MODULE_78__=__webpack_require__(499);__webpack_require__.o(_selection_api_model__WEBPACK_IMPORTED_MODULE_78__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _selection_api_model__WEBPACK_IMPORTED_MODULE_78__.BASE_PATH}));var _service_api_model__WEBPACK_IMPORTED_MODULE_79__=__webpack_require__(500);__webpack_require__.o(_service_api_model__WEBPACK_IMPORTED_MODULE_79__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _service_api_model__WEBPACK_IMPORTED_MODULE_79__.BASE_PATH}));__webpack_require__(501);var _settingsListResponse_api_model__WEBPACK_IMPORTED_MODULE_81__=__webpack_require__(502);__webpack_require__.o(_settingsListResponse_api_model__WEBPACK_IMPORTED_MODULE_81__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _settingsListResponse_api_model__WEBPACK_IMPORTED_MODULE_81__.BASE_PATH}));var _sharingParameter_api_model__WEBPACK_IMPORTED_MODULE_82__=__webpack_require__(503);__webpack_require__.o(_sharingParameter_api_model__WEBPACK_IMPORTED_MODULE_82__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _sharingParameter_api_model__WEBPACK_IMPORTED_MODULE_82__.BASE_PATH}));var _sharingResponse_api_model__WEBPACK_IMPORTED_MODULE_83__=__webpack_require__(504);__webpack_require__.o(_sharingResponse_api_model__WEBPACK_IMPORTED_MODULE_83__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _sharingResponse_api_model__WEBPACK_IMPORTED_MODULE_83__.BASE_PATH}));var _siblings_api_model__WEBPACK_IMPORTED_MODULE_84__=__webpack_require__(505);__webpack_require__.o(_siblings_api_model__WEBPACK_IMPORTED_MODULE_84__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _siblings_api_model__WEBPACK_IMPORTED_MODULE_84__.BASE_PATH}));var _simpleMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_85__=__webpack_require__(506);__webpack_require__.o(_simpleMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_85__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _simpleMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_85__.BASE_PATH}));var _siteInformation_api_model__WEBPACK_IMPORTED_MODULE_86__=__webpack_require__(507);__webpack_require__.o(_siteInformation_api_model__WEBPACK_IMPORTED_MODULE_86__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _siteInformation_api_model__WEBPACK_IMPORTED_MODULE_86__.BASE_PATH}));var _source_api_model__WEBPACK_IMPORTED_MODULE_87__=__webpack_require__(508);__webpack_require__.o(_source_api_model__WEBPACK_IMPORTED_MODULE_87__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _source_api_model__WEBPACK_IMPORTED_MODULE_87__.BASE_PATH}));__webpack_require__(509),__webpack_require__(510);var _suggestionType_api_model__WEBPACK_IMPORTED_MODULE_90__=__webpack_require__(511);__webpack_require__.o(_suggestionType_api_model__WEBPACK_IMPORTED_MODULE_90__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _suggestionType_api_model__WEBPACK_IMPORTED_MODULE_90__.BASE_PATH}));var _systemInfo_api_model__WEBPACK_IMPORTED_MODULE_91__=__webpack_require__(512);__webpack_require__.o(_systemInfo_api_model__WEBPACK_IMPORTED_MODULE_91__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _systemInfo_api_model__WEBPACK_IMPORTED_MODULE_91__.BASE_PATH}));var _thumbnail_api_model__WEBPACK_IMPORTED_MODULE_92__=__webpack_require__(513);__webpack_require__.o(_thumbnail_api_model__WEBPACK_IMPORTED_MODULE_92__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _thumbnail_api_model__WEBPACK_IMPORTED_MODULE_92__.BASE_PATH}));var _transferRequest_api_model__WEBPACK_IMPORTED_MODULE_93__=__webpack_require__(514);__webpack_require__.o(_transferRequest_api_model__WEBPACK_IMPORTED_MODULE_93__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _transferRequest_api_model__WEBPACK_IMPORTED_MODULE_93__.BASE_PATH}));var _uiSetting_api_model__WEBPACK_IMPORTED_MODULE_94__=__webpack_require__(515);__webpack_require__.o(_uiSetting_api_model__WEBPACK_IMPORTED_MODULE_94__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _uiSetting_api_model__WEBPACK_IMPORTED_MODULE_94__.BASE_PATH}));__webpack_require__(516);var _userDto_api_model__WEBPACK_IMPORTED_MODULE_96__=__webpack_require__(517);__webpack_require__.o(_userDto_api_model__WEBPACK_IMPORTED_MODULE_96__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _userDto_api_model__WEBPACK_IMPORTED_MODULE_96__.BASE_PATH}));var _userFeedbackDTO_api_model__WEBPACK_IMPORTED_MODULE_97__=__webpack_require__(518);__webpack_require__.o(_userFeedbackDTO_api_model__WEBPACK_IMPORTED_MODULE_97__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _userFeedbackDTO_api_model__WEBPACK_IMPORTED_MODULE_97__.BASE_PATH}));__webpack_require__(519),__webpack_require__(520);var _userGroupsResponse_api_model__WEBPACK_IMPORTED_MODULE_100__=__webpack_require__(521);__webpack_require__.o(_userGroupsResponse_api_model__WEBPACK_IMPORTED_MODULE_100__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _userGroupsResponse_api_model__WEBPACK_IMPORTED_MODULE_100__.BASE_PATH}));var _userRegisterDto_api_model__WEBPACK_IMPORTED_MODULE_101__=__webpack_require__(522);__webpack_require__.o(_userRegisterDto_api_model__WEBPACK_IMPORTED_MODULE_101__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _userRegisterDto_api_model__WEBPACK_IMPORTED_MODULE_101__.BASE_PATH}));var _userSearchDto_api_model__WEBPACK_IMPORTED_MODULE_102__=__webpack_require__(523);__webpack_require__.o(_userSearchDto_api_model__WEBPACK_IMPORTED_MODULE_102__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _userSearchDto_api_model__WEBPACK_IMPORTED_MODULE_102__.BASE_PATH}));__webpack_require__(524);var _values_api_model__WEBPACK_IMPORTED_MODULE_104__=__webpack_require__(525);__webpack_require__.o(_values_api_model__WEBPACK_IMPORTED_MODULE_104__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _values_api_model__WEBPACK_IMPORTED_MODULE_104__.BASE_PATH}));var _xsltMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_105__=__webpack_require__(526);__webpack_require__.o(_xsltMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_105__,"BASE_PATH")&&__webpack_require__.d(__webpack_exports__,"BASE_PATH",(function(){return _xsltMetadataProcessingReport_api_model__WEBPACK_IMPORTED_MODULE_105__.BASE_PATH}))},421:function(module,exports){},422:function(module,exports){},423:function(module,exports){},424:function(module,exports){},425:function(module,exports){},426:function(module,exports){},427:function(module,exports){},428:function(module,exports){},429:function(module,exports){},430:function(module,exports){},431:function(module,exports){},432:function(module,exports){},433:function(module,exports){},434:function(module,exports){},435:function(module,exports){},436:function(module,exports){},437:function(module,exports){},438:function(module,exports){},439:function(module,exports){},440:function(module,exports){},441:function(module,exports){},442:function(module,exports){},443:function(module,exports){},444:function(module,exports){},445:function(module,__webpack_exports__,__webpack_require__){"use strict";var GroupPrivilegeApiModel;!function(GroupPrivilegeApiModel){GroupPrivilegeApiModel.UserProfilesEnum={Administrator:"Administrator",UserAdmin:"UserAdmin",Reviewer:"Reviewer",Editor:"Editor",RegisteredUser:"RegisteredUser",Guest:"Guest",Monitor:"Monitor"},GroupPrivilegeApiModel.UserProfileEnum={Administrator:"Administrator",UserAdmin:"UserAdmin",Reviewer:"Reviewer",Editor:"Editor",RegisteredUser:"RegisteredUser",Guest:"Guest",Monitor:"Monitor"}}(GroupPrivilegeApiModel||(GroupPrivilegeApiModel={}))},446:function(module,exports){},447:function(module,exports){},448:function(module,exports){},449:function(module,exports){},450:function(module,exports){},451:function(module,exports){},452:function(module,exports){},453:function(module,exports){},454:function(module,exports){},455:function(module,exports){},456:function(module,__webpack_exports__,__webpack_require__){"use strict";var LinkApiModel;!function(LinkApiModel){LinkApiModel.LinkTypeEnum={HTTP:"HTTP",METADATA:"METADATA"}}(LinkApiModel||(LinkApiModel={}))},457:function(module,exports){},458:function(module,exports){},459:function(module,exports){},460:function(module,exports){},461:function(module,exports){},462:function(module,exports){},463:function(module,exports){},464:function(module,exports){},465:function(module,exports){},466:function(module,exports){},467:function(module,exports){},468:function(module,__webpack_exports__,__webpack_require__){"use strict";var MetadataResourceApiModel;!function(MetadataResourceApiModel){MetadataResourceApiModel.VisibilityEnum={Public:"public",Private:"private"}}(MetadataResourceApiModel||(MetadataResourceApiModel={}))},469:function(module,exports){},470:function(module,exports){},471:function(module,exports){},472:function(module,exports){},473:function(module,exports){},474:function(module,exports){},475:function(module,exports){},476:function(module,__webpack_exports__,__webpack_require__){"use strict";var OperationApiModel;!function(OperationApiModel){OperationApiModel.ReservedOperationEnum={View:"view",Download:"download",Editing:"editing",Notify:"notify",Dynamic:"dynamic",Featured:"featured"}}(OperationApiModel||(OperationApiModel={}))},477:function(module,exports){},478:function(module,__webpack_exports__,__webpack_require__){"use strict";var PageJSONWrapperApiModel;!function(PageJSONWrapperApiModel){PageJSONWrapperApiModel.FormatEnum={LINK:"LINK",HTML:"HTML",TEXT:"TEXT",MARKDOWN:"MARKDOWN",WIKI:"WIKI"},PageJSONWrapperApiModel.SectionsEnum={ALL:"ALL",TOP:"TOP",FOOTER:"FOOTER",MENU:"MENU",SUBMENU:"SUBMENU",CUSTOMMENU1:"CUSTOM_MENU1",CUSTOMMENU2:"CUSTOM_MENU2",CUSTOMMENU3:"CUSTOM_MENU3",DRAFT:"DRAFT"},PageJSONWrapperApiModel.StatusEnum={PUBLIC:"PUBLIC",PUBLICONLY:"PUBLIC_ONLY",PRIVATE:"PRIVATE",HIDDEN:"HIDDEN"}}(PageJSONWrapperApiModel||(PageJSONWrapperApiModel={}))},479:function(module,exports){},480:function(module,exports){},481:function(module,exports){},482:function(module,exports){},483:function(module,exports){},484:function(module,exports){},485:function(module,exports){},486:function(module,exports){},487:function(module,exports){},488:function(module,exports){},489:function(module,exports){},490:function(module,exports){},491:function(module,exports){},492:function(module,exports){},493:function(module,exports){},494:function(module,exports){},495:function(module,exports){},496:function(module,exports){},497:function(module,exports){},498:function(module,exports){},499:function(module,exports){},500:function(module,exports){},501:function(module,__webpack_exports__,__webpack_require__){"use strict";var SettingApiModel;!function(SettingApiModel){SettingApiModel.DataTypeEnum={STRING:"STRING",INT:"INT",BOOLEAN:"BOOLEAN",JSON:"JSON"}}(SettingApiModel||(SettingApiModel={}))},502:function(module,exports){},503:function(module,exports){},504:function(module,exports){},505:function(module,exports){},506:function(module,exports){},507:function(module,exports){},508:function(module,exports){},509:function(module,__webpack_exports__,__webpack_require__){"use strict";var StatusApiModel;!function(StatusApiModel){StatusApiModel.StateEnum={RED:"RED",UNINITIALIZED:"UNINITIALIZED",YELLOW:"YELLOW",GREEN:"GREEN",DISABLED:"DISABLED"}}(StatusApiModel||(StatusApiModel={}))},510:function(module,__webpack_exports__,__webpack_require__){"use strict";var StatusValueApiModel;!function(StatusValueApiModel){StatusValueApiModel.TypeEnum={Workflow:"workflow",Task:"task",Event:"event"},StatusValueApiModel.NotificationLevelEnum={StatusUserOwner:"statusUserOwner",CatalogueAdministrator:"catalogueAdministrator",CatalogueProfileAdministrator:"catalogueProfileAdministrator",CatalogueProfileUserAdmin:"catalogueProfileUserAdmin",CatalogueProfileReviewer:"catalogueProfileReviewer",CatalogueProfileEditor:"catalogueProfileEditor",CatalogueProfileRegisteredUser:"catalogueProfileRegisteredUser",CatalogueProfileGuest:"catalogueProfileGuest",RecordProfileReviewer:"recordProfileReviewer",RecordUserAuthor:"recordUserAuthor"}}(StatusValueApiModel||(StatusValueApiModel={}))},511:function(module,exports){},512:function(module,exports){},513:function(module,exports){},514:function(module,exports){},515:function(module,exports){},516:function(module,__webpack_exports__,__webpack_require__){"use strict";var UserApiModel;!function(UserApiModel){UserApiModel.ProfileEnum={Administrator:"Administrator",UserAdmin:"UserAdmin",Reviewer:"Reviewer",Editor:"Editor",RegisteredUser:"RegisteredUser",Guest:"Guest",Monitor:"Monitor"}}(UserApiModel||(UserApiModel={}))},517:function(module,exports){},518:function(module,exports){},519:function(module,__webpack_exports__,__webpack_require__){"use strict";var UserGroupApiModel;!function(UserGroupApiModel){UserGroupApiModel.ProfileEnum={Administrator:"Administrator",UserAdmin:"UserAdmin",Reviewer:"Reviewer",Editor:"Editor",RegisteredUser:"RegisteredUser",Guest:"Guest",Monitor:"Monitor"}}(UserGroupApiModel||(UserGroupApiModel={}))},520:function(module,__webpack_exports__,__webpack_require__){"use strict";var UserGroupIdApiModel;!function(UserGroupIdApiModel){UserGroupIdApiModel.ProfileEnum={Administrator:"Administrator",UserAdmin:"UserAdmin",Reviewer:"Reviewer",Editor:"Editor",RegisteredUser:"RegisteredUser",Guest:"Guest",Monitor:"Monitor"}}(UserGroupIdApiModel||(UserGroupIdApiModel={}))},521:function(module,exports){},522:function(module,exports){},523:function(module,exports){},524:function(module,__webpack_exports__,__webpack_require__){"use strict";var UserSecurityApiModel;!function(UserSecurityApiModel){UserSecurityApiModel.SecurityNotificationsEnum={UPDATEHASHREQUIRED:"UPDATE_HASH_REQUIRED",UNKNOWN:"UNKNOWN"}}(UserSecurityApiModel||(UserSecurityApiModel={}))},525:function(module,exports){},526:function(module,exports){},527:function(module,__webpack_exports__,__webpack_require__){"use strict";var ApiModule_1,_a,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_configuration__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(4),_angular_common_http__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(2);let ApiModule=ApiModule_1=class ApiModule{static forRoot(configurationFactory){return{ngModule:ApiModule_1,providers:[{provide:_configuration__WEBPACK_IMPORTED_MODULE_2__.a,useFactory:configurationFactory}]}}constructor(parentModule,http){if(parentModule)throw new Error("ApiModule is already loaded. Import in your base AppModule only.");if(!http)throw new Error("You need to import the HttpClientModule in your AppModule! \nSee also https://github.com/angular/angular/issues/20575")}};ApiModule=ApiModule_1=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({imports:[],declarations:[],exports:[],providers:[]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.e)(0,Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional)()),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.e)(0,Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.SkipSelf)()),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.e)(1,Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional)()),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[ApiModule,"function"==typeof(_a=void 0!==_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.a&&_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.a)?_a:Object])],ApiModule)},530:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return search_api_service_SearchApiService}));var tslib_es6=__webpack_require__(1),core=__webpack_require__(0),http=__webpack_require__(2);class CustomHttpParameterCodec{encodeKey(k){return encodeURIComponent(k)}encodeValue(v){return encodeURIComponent(v)}decodeKey(k){return decodeURIComponent(k)}decodeValue(v){return decodeURIComponent(v)}}var _a,_b,variables=__webpack_require__(8),openapi_configuration=__webpack_require__(4);let customstyle_api_service_CustomstyleApiService=class CustomstyleApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getCssStyle(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/customstyle`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}saveCssStyle(body,observe="body",reportProgress=!1,options){if(null==body)throw new Error("Required parameter body was null or undefined when calling saveCssStyle.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/customstyle`,body,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var groups_api_service_a,groups_api_service_b;customstyle_api_service_CustomstyleApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(_a=void 0!==http.a&&http.a)?_a:Object,String,"function"==typeof(_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?_b:Object])],customstyle_api_service_CustomstyleApiService);let groups_api_service_GroupsApiService=class GroupsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}addGroup(groupApiModel,observe="body",reportProgress=!1,options){if(null==groupApiModel)throw new Error("Required parameter groupApiModel was null or undefined when calling addGroup.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/groups`,groupApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteGroup(groupIdentifier,force,observe="body",reportProgress=!1,options){if(null==groupIdentifier)throw new Error("Required parameter groupIdentifier was null or undefined when calling deleteGroup.");let queryParameters=new http.d({encoder:this.encoder});null!=force&&(queryParameters=this.addToHttpParams(queryParameters,force,"force"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/groups/${encodeURIComponent(String(groupIdentifier))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getGroup(groupIdentifier,observe="body",reportProgress=!1,options){if(null==groupIdentifier)throw new Error("Required parameter groupIdentifier was null or undefined when calling getGroup.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/groups/${encodeURIComponent(String(groupIdentifier))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getGroupUsers(groupIdentifier,observe="body",reportProgress=!1,options){if(null==groupIdentifier)throw new Error("Required parameter groupIdentifier was null or undefined when calling getGroupUsers.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/groups/${encodeURIComponent(String(groupIdentifier))}/users`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getGroups(withReservedGroup,profile,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=withReservedGroup&&(queryParameters=this.addToHttpParams(queryParameters,withReservedGroup,"withReservedGroup")),null!=profile&&(queryParameters=this.addToHttpParams(queryParameters,profile,"profile"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/groups`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateGroup(groupIdentifier,groupApiModel,observe="body",reportProgress=!1,options){if(null==groupIdentifier)throw new Error("Required parameter groupIdentifier was null or undefined when calling updateGroup.");if(null==groupApiModel)throw new Error("Required parameter groupApiModel was null or undefined when calling updateGroup.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/groups/${encodeURIComponent(String(groupIdentifier))}`,groupApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var harvesters_api_service_a,harvesters_api_service_b;groups_api_service_GroupsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(groups_api_service_a=void 0!==http.a&&http.a)?groups_api_service_a:Object,String,"function"==typeof(groups_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?groups_api_service_b:Object])],groups_api_service_GroupsApiService);let harvesters_api_service_HarvestersApiService=class HarvestersApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}assignHarvestedRecordToSource(harvesterUuid,source,observe="body",reportProgress=!1,options){if(null==harvesterUuid)throw new Error("Required parameter harvesterUuid was null or undefined when calling assignHarvestedRecordToSource.");if(null==source)throw new Error("Required parameter source was null or undefined when calling assignHarvestedRecordToSource.");let queryParameters=new http.d({encoder:this.encoder});null!=source&&(queryParameters=this.addToHttpParams(queryParameters,source,"source"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/harvesters/${encodeURIComponent(String(harvesterUuid))}/assign`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var identifiers_api_service_a,identifiers_api_service_b;harvesters_api_service_HarvestersApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(harvesters_api_service_a=void 0!==http.a&&http.a)?harvesters_api_service_a:Object,String,"function"==typeof(harvesters_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?harvesters_api_service_b:Object])],harvesters_api_service_HarvestersApiService);let identifiers_api_service_IdentifiersApiService=class IdentifiersApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}addIdentifier(metadataIdentifierTemplateApiModel,observe="body",reportProgress=!1,options){if(null==metadataIdentifierTemplateApiModel)throw new Error("Required parameter metadataIdentifierTemplateApiModel was null or undefined when calling addIdentifier.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/identifiers`,metadataIdentifierTemplateApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getIdentifiers(userDefinedOnly,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=userDefinedOnly&&(queryParameters=this.addToHttpParams(queryParameters,userDefinedOnly,"userDefinedOnly"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/identifiers`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateIdentifier(identifier,metadataIdentifierTemplateApiModel,observe="body",reportProgress=!1,options){if(null==identifier)throw new Error("Required parameter identifier was null or undefined when calling updateIdentifier.");if(null==metadataIdentifierTemplateApiModel)throw new Error("Required parameter metadataIdentifierTemplateApiModel was null or undefined when calling updateIdentifier.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/identifiers/${encodeURIComponent(String(identifier))}`,metadataIdentifierTemplateApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var languages_api_service_a,languages_api_service_b;identifiers_api_service_IdentifiersApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(identifiers_api_service_a=void 0!==http.a&&http.a)?identifiers_api_service_a:Object,String,"function"==typeof(identifiers_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?identifiers_api_service_b:Object])],identifiers_api_service_IdentifiersApiService);let languages_api_service_LanguagesApiService=class LanguagesApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getIsoLanguages(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/isolanguages`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var links_api_service_a,links_api_service_b;languages_api_service_LanguagesApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(languages_api_service_a=void 0!==http.a&&http.a)?languages_api_service_a:Object,String,"function"==typeof(languages_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?languages_api_service_b:Object])],languages_api_service_LanguagesApiService);let links_api_service_LinksApiService=class LinksApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}analyzeRecordLinks(uuids,bucket,removeFirst,analyze,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=removeFirst&&(queryParameters=this.addToHttpParams(queryParameters,removeFirst,"removeFirst")),null!=analyze&&(queryParameters=this.addToHttpParams(queryParameters,analyze,"analyze"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/records/links`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecordLinks(filter,groupIdFilter,groupOwnerIdFilter,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=filter&&(queryParameters=this.addToHttpParams(queryParameters,filter,"filter")),groupIdFilter&&groupIdFilter.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groupIdFilter")}),groupOwnerIdFilter&&groupOwnerIdFilter.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groupOwnerIdFilter")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/links`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecordLinksAsCsv(filter,groupIdFilter,groupOwnerIdFilter,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=filter&&(queryParameters=this.addToHttpParams(queryParameters,filter,"filter")),groupIdFilter&&groupIdFilter.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groupIdFilter")}),groupOwnerIdFilter&&groupOwnerIdFilter.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groupOwnerIdFilter")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/links/csv`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}purgeAll(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/records/links`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var logos_api_service_a,logos_api_service_b;links_api_service_LinksApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(links_api_service_a=void 0!==http.a&&http.a)?links_api_service_a:Object,String,"function"==typeof(links_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?links_api_service_b:Object])],links_api_service_LinksApiService);let logos_api_service_LogosApiService=class LogosApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}addLogo(file,overwrite,observe="body",reportProgress=!1,options){if(null==file)throw new Error("Required parameter file was null or undefined when calling addLogo.");let queryParameters=new http.d({encoder:this.encoder});file&&file.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"file")}),null!=overwrite&&(queryParameters=this.addToHttpParams(queryParameters,overwrite,"overwrite"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/logos`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteLogo(file,observe="body",reportProgress=!1,options){if(null==file)throw new Error("Required parameter file was null or undefined when calling deleteLogo.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/logos/${encodeURIComponent(String(file))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}get3(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/logos`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var mapservers_api_service_a,mapservers_api_service_b;logos_api_service_LogosApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(logos_api_service_a=void 0!==http.a&&http.a)?logos_api_service_a:Object,String,"function"==typeof(logos_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?logos_api_service_b:Object])],logos_api_service_LogosApiService);let mapservers_api_service_MapserversApiService=class MapserversApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}addMapserver(mapServerApiModel,observe="body",reportProgress=!1,options){if(null==mapServerApiModel)throw new Error("Required parameter mapServerApiModel was null or undefined when calling addMapserver.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/mapservers`,mapServerApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteMapserverResource(mapserverId,metadataUuid,resource,metadataTitle,metadataAbstract,observe="body",reportProgress=!1,options){if(null==mapserverId)throw new Error("Required parameter mapserverId was null or undefined when calling deleteMapserverResource.");if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling deleteMapserverResource.");if(null==resource)throw new Error("Required parameter resource was null or undefined when calling deleteMapserverResource.");let queryParameters=new http.d({encoder:this.encoder});null!=resource&&(queryParameters=this.addToHttpParams(queryParameters,resource,"resource")),null!=metadataTitle&&(queryParameters=this.addToHttpParams(queryParameters,metadataTitle,"metadataTitle")),null!=metadataAbstract&&(queryParameters=this.addToHttpParams(queryParameters,metadataAbstract,"metadataAbstract"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/mapservers/${encodeURIComponent(String(mapserverId))}/records/${encodeURIComponent(String(metadataUuid))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getMapserver(mapserverId,observe="body",reportProgress=!1,options){if(null==mapserverId)throw new Error("Required parameter mapserverId was null or undefined when calling getMapserver.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/mapservers/${encodeURIComponent(String(mapserverId))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getMapserverResource(mapserverId,metadataUuid,resource,metadataTitle,metadataAbstract,observe="body",reportProgress=!1,options){if(null==mapserverId)throw new Error("Required parameter mapserverId was null or undefined when calling getMapserverResource.");if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getMapserverResource.");if(null==resource)throw new Error("Required parameter resource was null or undefined when calling getMapserverResource.");let queryParameters=new http.d({encoder:this.encoder});null!=resource&&(queryParameters=this.addToHttpParams(queryParameters,resource,"resource")),null!=metadataTitle&&(queryParameters=this.addToHttpParams(queryParameters,metadataTitle,"metadataTitle")),null!=metadataAbstract&&(queryParameters=this.addToHttpParams(queryParameters,metadataAbstract,"metadataAbstract"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/mapservers/${encodeURIComponent(String(mapserverId))}/records/${encodeURIComponent(String(metadataUuid))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getMapservers(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/mapservers`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}publishMapserverResource(mapserverId,metadataUuid,resource,metadataTitle,metadataAbstract,observe="body",reportProgress=!1,options){if(null==mapserverId)throw new Error("Required parameter mapserverId was null or undefined when calling publishMapserverResource.");if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling publishMapserverResource.");if(null==resource)throw new Error("Required parameter resource was null or undefined when calling publishMapserverResource.");let queryParameters=new http.d({encoder:this.encoder});null!=resource&&(queryParameters=this.addToHttpParams(queryParameters,resource,"resource")),null!=metadataTitle&&(queryParameters=this.addToHttpParams(queryParameters,metadataTitle,"metadataTitle")),null!=metadataAbstract&&(queryParameters=this.addToHttpParams(queryParameters,metadataAbstract,"metadataAbstract"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/mapservers/${encodeURIComponent(String(mapserverId))}/records/${encodeURIComponent(String(metadataUuid))}`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateMapserver(mapserverId,mapServerApiModel,observe="body",reportProgress=!1,options){if(null==mapserverId)throw new Error("Required parameter mapserverId was null or undefined when calling updateMapserver.");if(null==mapServerApiModel)throw new Error("Required parameter mapServerApiModel was null or undefined when calling updateMapserver.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/mapservers/${encodeURIComponent(String(mapserverId))}`,mapServerApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var me_api_service_a,me_api_service_b;mapservers_api_service_MapserversApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(mapservers_api_service_a=void 0!==http.a&&http.a)?mapservers_api_service_a:Object,String,"function"==typeof(mapservers_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?mapservers_api_service_b:Object])],mapservers_api_service_MapserversApiService);let me_api_service_MeApiService=class MeApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getMe(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/me`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var operations_api_service_a,operations_api_service_b;me_api_service_MeApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(me_api_service_a=void 0!==http.a&&http.a)?me_api_service_a:Object,String,"function"==typeof(me_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?me_api_service_b:Object])],me_api_service_MeApiService);let operations_api_service_OperationsApiService=class OperationsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getOperations(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/operations`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var pages_api_service_a,pages_api_service_b;operations_api_service_OperationsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(operations_api_service_a=void 0!==http.a&&http.a)?operations_api_service_a:Object,String,"function"==typeof(operations_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?operations_api_service_b:Object])],operations_api_service_OperationsApiService);let pages_api_service_PagesApiService=class PagesApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getPage(language,pageId,observe="body",reportProgress=!1,options){if(null==language)throw new Error("Required parameter language was null or undefined when calling getPage.");if(null==pageId)throw new Error("Required parameter pageId was null or undefined when calling getPage.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/pages/${encodeURIComponent(String(language))}/${encodeURIComponent(String(pageId))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getPageContent(language,pageId,observe="body",reportProgress=!1,options){if(null==language)throw new Error("Required parameter language was null or undefined when calling getPageContent.");if(null==pageId)throw new Error("Required parameter pageId was null or undefined when calling getPageContent.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain;charset=UTF-8"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/pages/${encodeURIComponent(String(language))}/${encodeURIComponent(String(pageId))}/content`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}listPages(language,section,format,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=language&&(queryParameters=this.addToHttpParams(queryParameters,language,"language")),null!=section&&(queryParameters=this.addToHttpParams(queryParameters,section,"section")),null!=format&&(queryParameters=this.addToHttpParams(queryParameters,format,"format"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/pages/list`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var processes_api_service_a,processes_api_service_b;pages_api_service_PagesApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(pages_api_service_a=void 0!==http.a&&http.a)?pages_api_service_a:Object,String,"function"==typeof(pages_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?pages_api_service_b:Object])],pages_api_service_PagesApiService);let processes_api_service_ProcessesApiService=class ProcessesApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}_delete(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/processes/reports`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getProcessReport(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/processes/reports`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}previewProcessRecords(process,uuids,bucket,appendFirst,observe="body",reportProgress=!1,options){if(null==process)throw new Error("Required parameter process was null or undefined when calling previewProcessRecords.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=appendFirst&&(queryParameters=this.addToHttpParams(queryParameters,appendFirst,"appendFirst"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/processes/${encodeURIComponent(String(process))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}processRecords(process,uuids,bucket,updateDateStamp,index,observe="body",reportProgress=!1,options){if(null==process)throw new Error("Required parameter process was null or undefined when calling processRecords.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=updateDateStamp&&(queryParameters=this.addToHttpParams(queryParameters,updateDateStamp,"updateDateStamp")),null!=index&&(queryParameters=this.addToHttpParams(queryParameters,index,"index"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/processes/${encodeURIComponent(String(process))}`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}searchAndReplace(process,uuids,bucket,isTesting,isCaseInsensitive,vacuumMode,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=process&&(queryParameters=this.addToHttpParams(queryParameters,process,"process")),uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=isTesting&&(queryParameters=this.addToHttpParams(queryParameters,isTesting,"isTesting")),null!=isCaseInsensitive&&(queryParameters=this.addToHttpParams(queryParameters,isCaseInsensitive,"isCaseInsensitive")),null!=vacuumMode&&(queryParameters=this.addToHttpParams(queryParameters,vacuumMode,"vacuumMode"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/processes/search-and-replace`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var records_api_service_a,records_api_service_b;processes_api_service_ProcessesApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(processes_api_service_a=void 0!==http.a&&http.a)?processes_api_service_a:Object,String,"function"==typeof(processes_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?processes_api_service_b:Object])],processes_api_service_ProcessesApiService);let records_api_service_RecordsApiService=class RecordsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}addElement(metadataUuid,ref,direction,displayAttributes,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling addElement.");if(null==ref)throw new Error("Required parameter ref was null or undefined when calling addElement.");if(null==direction)throw new Error("Required parameter direction was null or undefined when calling addElement.");let queryParameters=new http.d({encoder:this.encoder});null!=ref&&(queryParameters=this.addToHttpParams(queryParameters,ref,"ref")),null!=displayAttributes&&(queryParameters=this.addToHttpParams(queryParameters,displayAttributes,"displayAttributes"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/editor/elements/${encodeURIComponent(String(direction))}`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}addSamples(schema,observe="body",reportProgress=!1,options){if(null==schema)throw new Error("Required parameter schema was null or undefined when calling addSamples.");let queryParameters=new http.d({encoder:this.encoder});schema&&schema.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"schema")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/samples`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}addSamples1(schema,observe="body",reportProgress=!1,options){if(null==schema)throw new Error("Required parameter schema was null or undefined when calling addSamples1.");let queryParameters=new http.d({encoder:this.encoder});schema&&schema.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"schema")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/templates`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}applyQuery(metadataUuid,savedQuery,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling applyQuery.");if(null==savedQuery)throw new Error("Required parameter savedQuery was null or undefined when calling applyQuery.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/query/${encodeURIComponent(String(savedQuery))}`,null,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}batchEdit(batchEditParameterApiModel,uuids,bucket,updateDateStamp,observe="body",reportProgress=!1,options){if(null==batchEditParameterApiModel)throw new Error("Required parameter batchEditParameterApiModel was null or undefined when calling batchEdit.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=updateDateStamp&&(queryParameters=this.addToHttpParams(queryParameters,updateDateStamp,"updateDateStamp"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/batchediting`,batchEditParameterApiModel,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}cancelEdits(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling cancelEdits.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/editor`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}checkDoiStatus(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling checkDoiStatus.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/doi/checkPreConditions`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}checkValidation(testId,observe="body",reportProgress=!1,options){if(null==testId)throw new Error("Required parameter testId was null or undefined when calling checkValidation.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(testId))}/validate/inspire`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}create(sourceUuid,group,metadataType,targetUuid,isVisibleByAllGroupMembers,category,hasCategoryOfSource,isChildOfSource,observe="body",reportProgress=!1,options){if(null==sourceUuid)throw new Error("Required parameter sourceUuid was null or undefined when calling create.");if(null==group)throw new Error("Required parameter group was null or undefined when calling create.");let queryParameters=new http.d({encoder:this.encoder});null!=metadataType&&(queryParameters=this.addToHttpParams(queryParameters,metadataType,"metadataType")),null!=sourceUuid&&(queryParameters=this.addToHttpParams(queryParameters,sourceUuid,"sourceUuid")),null!=targetUuid&&(queryParameters=this.addToHttpParams(queryParameters,targetUuid,"targetUuid")),null!=group&&(queryParameters=this.addToHttpParams(queryParameters,group,"group")),null!=isVisibleByAllGroupMembers&&(queryParameters=this.addToHttpParams(queryParameters,isVisibleByAllGroupMembers,"isVisibleByAllGroupMembers")),category&&category.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"category")}),null!=hasCategoryOfSource&&(queryParameters=this.addToHttpParams(queryParameters,hasCategoryOfSource,"hasCategoryOfSource")),null!=isChildOfSource&&(queryParameters=this.addToHttpParams(queryParameters,isChildOfSource,"isChildOfSource"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/duplicate`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}createDoi(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling createDoi.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/doi`,null,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteAttribute(metadataUuid,ref,displayAttributes,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling deleteAttribute.");if(null==ref)throw new Error("Required parameter ref was null or undefined when calling deleteAttribute.");let queryParameters=new http.d({encoder:this.encoder});null!=ref&&(queryParameters=this.addToHttpParams(queryParameters,ref,"ref")),null!=displayAttributes&&(queryParameters=this.addToHttpParams(queryParameters,displayAttributes,"displayAttributes"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/editor/attributes`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteElement(metadataUuid,ref,parent,displayAttributes,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling deleteElement.");if(null==ref)throw new Error("Required parameter ref was null or undefined when calling deleteElement.");if(null==parent)throw new Error("Required parameter parent was null or undefined when calling deleteElement.");let queryParameters=new http.d({encoder:this.encoder});ref&&ref.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"ref")}),null!=parent&&(queryParameters=this.addToHttpParams(queryParameters,parent,"parent")),null!=displayAttributes&&(queryParameters=this.addToHttpParams(queryParameters,displayAttributes,"displayAttributes"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/editor/elements`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteRecords(uuids,bucket,withBackup,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=withBackup&&(queryParameters=this.addToHttpParams(queryParameters,withBackup,"withBackup"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/records`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteTags(metadataUuid,id,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling deleteTags.");let queryParameters=new http.d({encoder:this.encoder});id&&id.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"id")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/tags`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}enableVersionControl(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling enableVersionControl.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/versions`,null,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}enableVersionControlForRecords(uuids,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/versions`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}exec(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/zip"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/backups/latest`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}exportAsCsv(uuids,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/csv`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}exportAsMef(uuids,bucket,format,withRelated,withXLinksResolved,withXLinkAttribute,addSchemaLocation,approved,accept,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=format&&(queryParameters=this.addToHttpParams(queryParameters,format,"format")),null!=withRelated&&(queryParameters=this.addToHttpParams(queryParameters,withRelated,"withRelated")),null!=withXLinksResolved&&(queryParameters=this.addToHttpParams(queryParameters,withXLinksResolved,"withXLinksResolved")),null!=withXLinkAttribute&&(queryParameters=this.addToHttpParams(queryParameters,withXLinkAttribute,"withXLinkAttribute")),null!=addSchemaLocation&&(queryParameters=this.addToHttpParams(queryParameters,addSchemaLocation,"addSchemaLocation")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders;null!=accept&&(headers=headers.set("Accept",String(accept)));let httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/zip`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}exportAsPdf(uuids,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/pdf`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getActiveUsers(dateFrom,dateTo,groups,observe="body",reportProgress=!1,options){if(null==dateFrom)throw new Error("Required parameter dateFrom was null or undefined when calling getActiveUsers.");if(null==dateTo)throw new Error("Required parameter dateTo was null or undefined when calling getActiveUsers.");let queryParameters=new http.d({encoder:this.encoder});null!=dateFrom&&(queryParameters=this.addToHttpParams(queryParameters,dateFrom,"dateFrom")),null!=dateTo&&(queryParameters=this.addToHttpParams(queryParameters,dateTo,"dateTo")),groups&&groups.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groups")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/reports/users`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getAllResources(metadataUuid,sort,approved,filter,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getAllResources.");let queryParameters=new http.d({encoder:this.encoder});null!=sort&&(queryParameters=this.addToHttpParams(queryParameters,sort,"sort")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved")),null!=filter&&(queryParameters=this.addToHttpParams(queryParameters,filter,"filter"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/attachments`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getAsRdf(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getFeatureCatalog(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getFeatureCatalog.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/featureCatalog`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecord(metadataUuid,addSchemaLocation,increasePopularity,withInfo,attachment,approved,accept,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getRecord.");let queryParameters=new http.d({encoder:this.encoder});null!=addSchemaLocation&&(queryParameters=this.addToHttpParams(queryParameters,addSchemaLocation,"addSchemaLocation")),null!=increasePopularity&&(queryParameters=this.addToHttpParams(queryParameters,increasePopularity,"increasePopularity")),null!=withInfo&&(queryParameters=this.addToHttpParams(queryParameters,withInfo,"withInfo")),null!=attachment&&(queryParameters=this.addToHttpParams(queryParameters,attachment,"attachment")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders;null!=accept&&(headers=headers.set("Accept",String(accept)));let httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/formatters/xml`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecord1(metadataUuid,addSchemaLocation,increasePopularity,withInfo,attachment,approved,accept,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getRecord1.");let queryParameters=new http.d({encoder:this.encoder});null!=addSchemaLocation&&(queryParameters=this.addToHttpParams(queryParameters,addSchemaLocation,"addSchemaLocation")),null!=increasePopularity&&(queryParameters=this.addToHttpParams(queryParameters,increasePopularity,"increasePopularity")),null!=withInfo&&(queryParameters=this.addToHttpParams(queryParameters,withInfo,"withInfo")),null!=attachment&&(queryParameters=this.addToHttpParams(queryParameters,attachment,"attachment")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders;null!=accept&&(headers=headers.set("Accept",String(accept)));let httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/formatters/json`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecordAsZip(metadataUuid,format,withRelated,withXLinksResolved,withXLinkAttribute,addSchemaLocation,approved,accept,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getRecordAsZip.");let queryParameters=new http.d({encoder:this.encoder});null!=format&&(queryParameters=this.addToHttpParams(queryParameters,format,"format")),null!=withRelated&&(queryParameters=this.addToHttpParams(queryParameters,withRelated,"withRelated")),null!=withXLinksResolved&&(queryParameters=this.addToHttpParams(queryParameters,withXLinksResolved,"withXLinksResolved")),null!=withXLinkAttribute&&(queryParameters=this.addToHttpParams(queryParameters,withXLinkAttribute,"withXLinkAttribute")),null!=addSchemaLocation&&(queryParameters=this.addToHttpParams(queryParameters,addSchemaLocation,"addSchemaLocation")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders;null!=accept&&(headers=headers.set("Accept",String(accept)));let httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/formatters/zip`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecordFormattedBy(formatterId,metadataUuid,accept,width,mdpath,language,output,approved,observe="body",reportProgress=!1,options){if(null==formatterId)throw new Error("Required parameter formatterId was null or undefined when calling getRecordFormattedBy.");if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getRecordFormattedBy.");let queryParameters=new http.d({encoder:this.encoder});null!=width&&(queryParameters=this.addToHttpParams(queryParameters,width,"width")),null!=mdpath&&(queryParameters=this.addToHttpParams(queryParameters,mdpath,"mdpath")),null!=language&&(queryParameters=this.addToHttpParams(queryParameters,language,"language")),null!=output&&(queryParameters=this.addToHttpParams(queryParameters,output,"output")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders;null!=accept&&(headers=headers.set("Accept",String(accept)));let httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/formatters/${encodeURIComponent(String(formatterId))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecordSharingSettings(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getRecordSharingSettings.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/sharing`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecordStatusHistory(metadataUuid,details,sortOrder,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getRecordStatusHistory.");let queryParameters=new http.d({encoder:this.encoder});null!=details&&(queryParameters=this.addToHttpParams(queryParameters,details,"details")),null!=sortOrder&&(queryParameters=this.addToHttpParams(queryParameters,sortOrder,"sortOrder"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/status`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRecordStatusHistoryByType(metadataUuid,type,details,sortOrder,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getRecordStatusHistoryByType.");if(null==type)throw new Error("Required parameter type was null or undefined when calling getRecordStatusHistoryByType.");let queryParameters=new http.d({encoder:this.encoder});null!=details&&(queryParameters=this.addToHttpParams(queryParameters,details,"details")),null!=sortOrder&&(queryParameters=this.addToHttpParams(queryParameters,sortOrder,"sortOrder"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/status/${encodeURIComponent(String(type))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRelated(metadataUuid,type,start,rows,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getRelated.");let queryParameters=new http.d({encoder:this.encoder});type&&type.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"type")}),null!=start&&(queryParameters=this.addToHttpParams(queryParameters,start,"start")),null!=rows&&(queryParameters=this.addToHttpParams(queryParameters,rows,"rows"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/related`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getReportDataDownloads(dateFrom,dateTo,groups,observe="body",reportProgress=!1,options){if(null==dateFrom)throw new Error("Required parameter dateFrom was null or undefined when calling getReportDataDownloads.");if(null==dateTo)throw new Error("Required parameter dateTo was null or undefined when calling getReportDataDownloads.");let queryParameters=new http.d({encoder:this.encoder});null!=dateFrom&&(queryParameters=this.addToHttpParams(queryParameters,dateFrom,"dateFrom")),null!=dateTo&&(queryParameters=this.addToHttpParams(queryParameters,dateTo,"dateTo")),groups&&groups.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groups")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/reports/datadownloads`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getReportDataUploads(dateFrom,dateTo,groups,observe="body",reportProgress=!1,options){if(null==dateFrom)throw new Error("Required parameter dateFrom was null or undefined when calling getReportDataUploads.");if(null==dateTo)throw new Error("Required parameter dateTo was null or undefined when calling getReportDataUploads.");let queryParameters=new http.d({encoder:this.encoder});null!=dateFrom&&(queryParameters=this.addToHttpParams(queryParameters,dateFrom,"dateFrom")),null!=dateTo&&(queryParameters=this.addToHttpParams(queryParameters,dateTo,"dateTo")),groups&&groups.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groups")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/reports/datauploads`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getReportInternalMetadata(dateFrom,dateTo,groups,observe="body",reportProgress=!1,options){if(null==dateFrom)throw new Error("Required parameter dateFrom was null or undefined when calling getReportInternalMetadata.");if(null==dateTo)throw new Error("Required parameter dateTo was null or undefined when calling getReportInternalMetadata.");let queryParameters=new http.d({encoder:this.encoder});null!=dateFrom&&(queryParameters=this.addToHttpParams(queryParameters,dateFrom,"dateFrom")),null!=dateTo&&(queryParameters=this.addToHttpParams(queryParameters,dateTo,"dateTo")),groups&&groups.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groups")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/reports/metadatainternal`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getReportUpdatedMetadata(dateFrom,dateTo,groups,observe="body",reportProgress=!1,options){if(null==dateFrom)throw new Error("Required parameter dateFrom was null or undefined when calling getReportUpdatedMetadata.");if(null==dateTo)throw new Error("Required parameter dateTo was null or undefined when calling getReportUpdatedMetadata.");let queryParameters=new http.d({encoder:this.encoder});null!=dateFrom&&(queryParameters=this.addToHttpParams(queryParameters,dateFrom,"dateFrom")),null!=dateTo&&(queryParameters=this.addToHttpParams(queryParameters,dateTo,"dateTo")),groups&&groups.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"groups")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/reports/metadataupdated`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getResource(metadataUuid,resourceId,approved,size,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getResource.");if(null==resourceId)throw new Error("Required parameter resourceId was null or undefined when calling getResource.");let queryParameters=new http.d({encoder:this.encoder});null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved")),null!=size&&(queryParameters=this.addToHttpParams(queryParameters,size,"size"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/attachments/${encodeURIComponent(String(resourceId))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSavedQueries(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getSavedQueries.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/query`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSharingSettings(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/sharing`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getStatus(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getStatus.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/status/workflow/last`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getStatusByType(type,details,author,owner,record,dateFrom,dateTo,from,size,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});type&&type.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"type")}),null!=details&&(queryParameters=this.addToHttpParams(queryParameters,details,"details")),author&&author.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"author")}),owner&&owner.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"owner")}),record&&record.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"record")}),null!=dateFrom&&(queryParameters=this.addToHttpParams(queryParameters,dateFrom,"dateFrom")),null!=dateTo&&(queryParameters=this.addToHttpParams(queryParameters,dateTo,"dateTo")),null!=from&&(queryParameters=this.addToHttpParams(queryParameters,from,"from")),null!=size&&(queryParameters=this.addToHttpParams(queryParameters,size,"size"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/status/search`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSuggestions(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getSuggestions.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/processes`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getTags1(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getTags1.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/tags`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getTestSuites(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getTestSuites.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/validate/inspire/testsuites`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}index(uuids,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/index`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}insert(metadataType,url,serverFolder,recursiveSearch,publishToAll,assignToCatalog,uuidProcessing,group,category,rejectIfInvalid,transformWith,schema,extra,body,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=metadataType&&(queryParameters=this.addToHttpParams(queryParameters,metadataType,"metadataType")),url&&url.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"url")}),null!=serverFolder&&(queryParameters=this.addToHttpParams(queryParameters,serverFolder,"serverFolder")),null!=recursiveSearch&&(queryParameters=this.addToHttpParams(queryParameters,recursiveSearch,"recursiveSearch")),null!=publishToAll&&(queryParameters=this.addToHttpParams(queryParameters,publishToAll,"publishToAll")),null!=assignToCatalog&&(queryParameters=this.addToHttpParams(queryParameters,assignToCatalog,"assignToCatalog")),null!=uuidProcessing&&(queryParameters=this.addToHttpParams(queryParameters,uuidProcessing,"uuidProcessing")),null!=group&&(queryParameters=this.addToHttpParams(queryParameters,group,"group")),category&&category.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"category")}),null!=rejectIfInvalid&&(queryParameters=this.addToHttpParams(queryParameters,rejectIfInvalid,"rejectIfInvalid")),null!=transformWith&&(queryParameters=this.addToHttpParams(queryParameters,transformWith,"transformWith")),null!=schema&&(queryParameters=this.addToHttpParams(queryParameters,schema,"schema")),null!=extra&&(queryParameters=this.addToHttpParams(queryParameters,extra,"extra"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/xml","application/json","application/x-www-form-urlencoded"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records`,body,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}insertFile(metadataType,file,uuidProcessing,group,category,rejectIfInvalid,publishToAll,assignToCatalog,transformWith,schema,extra,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=metadataType&&(queryParameters=this.addToHttpParams(queryParameters,metadataType,"metadataType")),file&&file.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"file")}),null!=uuidProcessing&&(queryParameters=this.addToHttpParams(queryParameters,uuidProcessing,"uuidProcessing")),null!=group&&(queryParameters=this.addToHttpParams(queryParameters,group,"group")),category&&category.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"category")}),null!=rejectIfInvalid&&(queryParameters=this.addToHttpParams(queryParameters,rejectIfInvalid,"rejectIfInvalid")),null!=publishToAll&&(queryParameters=this.addToHttpParams(queryParameters,publishToAll,"publishToAll")),null!=assignToCatalog&&(queryParameters=this.addToHttpParams(queryParameters,assignToCatalog,"assignToCatalog")),null!=transformWith&&(queryParameters=this.addToHttpParams(queryParameters,transformWith,"transformWith")),null!=schema&&(queryParameters=this.addToHttpParams(queryParameters,schema,"schema")),null!=extra&&(queryParameters=this.addToHttpParams(queryParameters,extra,"extra"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/records`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}insertOgcMapContextFile(title,recordAbstract,xml,filename,url,viewerUrl,overview,overviewFilename,topic,publishToAll,uuidProcessing,group,observe="body",reportProgress=!1,options){if(null==title)throw new Error("Required parameter title was null or undefined when calling insertOgcMapContextFile.");let queryParameters=new http.d({encoder:this.encoder});null!=title&&(queryParameters=this.addToHttpParams(queryParameters,title,"title")),null!=recordAbstract&&(queryParameters=this.addToHttpParams(queryParameters,recordAbstract,"recordAbstract")),null!=xml&&(queryParameters=this.addToHttpParams(queryParameters,xml,"xml")),null!=filename&&(queryParameters=this.addToHttpParams(queryParameters,filename,"filename")),null!=url&&(queryParameters=this.addToHttpParams(queryParameters,url,"url")),null!=viewerUrl&&(queryParameters=this.addToHttpParams(queryParameters,viewerUrl,"viewerUrl")),null!=overview&&(queryParameters=this.addToHttpParams(queryParameters,overview,"overview")),null!=overviewFilename&&(queryParameters=this.addToHttpParams(queryParameters,overviewFilename,"overviewFilename")),null!=topic&&(queryParameters=this.addToHttpParams(queryParameters,topic,"topic")),null!=publishToAll&&(queryParameters=this.addToHttpParams(queryParameters,publishToAll,"publishToAll")),null!=uuidProcessing&&(queryParameters=this.addToHttpParams(queryParameters,uuidProcessing,"uuidProcessing")),null!=group&&(queryParameters=this.addToHttpParams(queryParameters,group,"group"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/records/importfrommap`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}patchResource(metadataUuid,resourceId,visibility,approved,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling patchResource.");if(null==resourceId)throw new Error("Required parameter resourceId was null or undefined when calling patchResource.");if(null==visibility)throw new Error("Required parameter visibility was null or undefined when calling patchResource.");let queryParameters=new http.d({encoder:this.encoder});null!=visibility&&(queryParameters=this.addToHttpParams(queryParameters,visibility,"visibility")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.patch(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/attachments/${encodeURIComponent(String(resourceId))}`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}processRecord(metadataUuid,process,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling processRecord.");if(null==process)throw new Error("Required parameter process was null or undefined when calling processRecord.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/processes/${encodeURIComponent(String(process))}`,null,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}processRecordPreview(metadataUuid,process,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling processRecordPreview.");if(null==process)throw new Error("Required parameter process was null or undefined when calling processRecordPreview.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/processes/${encodeURIComponent(String(process))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}publish(uuids,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/publish`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}putResource(metadataUuid,visibility,approved,inlineObjectApiModel,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling putResource.");let queryParameters=new http.d({encoder:this.encoder});null!=visibility&&(queryParameters=this.addToHttpParams(queryParameters,visibility,"visibility")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/attachments`,inlineObjectApiModel,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}putResourceFromURL(metadataUuid,url,visibility,approved,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling putResourceFromURL.");if(null==url)throw new Error("Required parameter url was null or undefined when calling putResourceFromURL.");let queryParameters=new http.d({encoder:this.encoder});null!=visibility&&(queryParameters=this.addToHttpParams(queryParameters,visibility,"visibility")),null!=url&&(queryParameters=this.addToHttpParams(queryParameters,url,"url")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/attachments`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}rateRecord(metadataUuid,body,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling rateRecord.");if(null==body)throw new Error("Required parameter body was null or undefined when calling rateRecord.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/rate`,body,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}saveEdits(metadataUuid,tab,withAttributes,withValidationErrors,minor,status,commit,terminate,data,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling saveEdits.");let queryParameters=new http.d({encoder:this.encoder});null!=tab&&(queryParameters=this.addToHttpParams(queryParameters,tab,"tab")),null!=withAttributes&&(queryParameters=this.addToHttpParams(queryParameters,withAttributes,"withAttributes")),null!=withValidationErrors&&(queryParameters=this.addToHttpParams(queryParameters,withValidationErrors,"withValidationErrors")),null!=minor&&(queryParameters=this.addToHttpParams(queryParameters,minor,"minor")),null!=status&&(queryParameters=this.addToHttpParams(queryParameters,status,"status")),null!=commit&&(queryParameters=this.addToHttpParams(queryParameters,commit,"commit")),null!=terminate&&(queryParameters=this.addToHttpParams(queryParameters,terminate,"terminate")),null!=data&&(queryParameters=this.addToHttpParams(queryParameters,data,"data"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/editor`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}saveThumbnail(metadataUuid,jsonConfig,rotationAngle,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling saveThumbnail.");if(null==jsonConfig)throw new Error("Required parameter jsonConfig was null or undefined when calling saveThumbnail.");let queryParameters=new http.d({encoder:this.encoder});null!=jsonConfig&&(queryParameters=this.addToHttpParams(queryParameters,jsonConfig,"jsonConfig")),null!=rotationAngle&&(queryParameters=this.addToHttpParams(queryParameters,rotationAngle,"rotationAngle"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/attachments/print-thumbnail`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}setGroupAndOwner(groupIdentifier,userIdentifier,uuids,bucket,approved,observe="body",reportProgress=!1,options){if(null==groupIdentifier)throw new Error("Required parameter groupIdentifier was null or undefined when calling setGroupAndOwner.");if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling setGroupAndOwner.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=groupIdentifier&&(queryParameters=this.addToHttpParams(queryParameters,groupIdentifier,"groupIdentifier")),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=userIdentifier&&(queryParameters=this.addToHttpParams(queryParameters,userIdentifier,"userIdentifier")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/ownership`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}setRecordGroup(metadataUuid,body,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling setRecordGroup.");if(null==body)throw new Error("Required parameter body was null or undefined when calling setRecordGroup.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/group`,body,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}setRecordOwnership(metadataUuid,groupIdentifier,userIdentifier,approved,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling setRecordOwnership.");if(null==groupIdentifier)throw new Error("Required parameter groupIdentifier was null or undefined when calling setRecordOwnership.");if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling setRecordOwnership.");let queryParameters=new http.d({encoder:this.encoder});null!=groupIdentifier&&(queryParameters=this.addToHttpParams(queryParameters,groupIdentifier,"groupIdentifier")),null!=userIdentifier&&(queryParameters=this.addToHttpParams(queryParameters,userIdentifier,"userIdentifier")),null!=approved&&(queryParameters=this.addToHttpParams(queryParameters,approved,"approved"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/ownership`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}share(sharingParameterApiModel,uuids,bucket,observe="body",reportProgress=!1,options){if(null==sharingParameterApiModel)throw new Error("Required parameter sharingParameterApiModel was null or undefined when calling share.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/sharing`,sharingParameterApiModel,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}trigger(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/backups`,null,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}unpublish(uuids,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/unpublish`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateTags(id,uuids,bucket,clear,observe="body",reportProgress=!1,options){if(null==id)throw new Error("Required parameter id was null or undefined when calling updateTags.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),id&&id.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"id")}),null!=clear&&(queryParameters=this.addToHttpParams(queryParameters,clear,"clear"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/tags`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateTags1(id,uuids,bucket,observe="body",reportProgress=!1,options){if(null==id)throw new Error("Required parameter id was null or undefined when calling updateTags1.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),id&&id.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"id")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/records/tags`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateTags2(metadataUuid,id,clear,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling updateTags2.");if(null==id)throw new Error("Required parameter id was null or undefined when calling updateTags2.");let queryParameters=new http.d({encoder:this.encoder});id&&id.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"id")}),null!=clear&&(queryParameters=this.addToHttpParams(queryParameters,clear,"clear"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/tags`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}validateRecord(metadataUuid,testsuite,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling validateRecord.");if(null==testsuite)throw new Error("Required parameter testsuite was null or undefined when calling validateRecord.");let queryParameters=new http.d({encoder:this.encoder});null!=testsuite&&(queryParameters=this.addToHttpParams(queryParameters,testsuite,"testsuite"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/validate/inspire`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}validateRecord1(metadataUuid,isvalid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling validateRecord1.");let queryParameters=new http.d({encoder:this.encoder});null!=isvalid&&(queryParameters=this.addToHttpParams(queryParameters,isvalid,"isvalid"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/validate/internal`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}validateRecords(uuids,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/validate`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}validateRecordsInspire(uuids,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/records/validate/inspire`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var regions_api_service_a,regions_api_service_b;records_api_service_RecordsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(records_api_service_a=void 0!==http.a&&http.a)?records_api_service_a:Object,String,"function"==typeof(records_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?records_api_service_b:Object])],records_api_service_RecordsApiService);let regions_api_service_RegionsApiService=class RegionsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getRegionTypes(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/regions/types`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRegions(label,categoryId,maxRecords,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=label&&(queryParameters=this.addToHttpParams(queryParameters,label,"label")),null!=categoryId&&(queryParameters=this.addToHttpParams(queryParameters,categoryId,"categoryId")),null!=maxRecords&&(queryParameters=this.addToHttpParams(queryParameters,maxRecords,"maxRecords"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/regions`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var registries_api_service_a,registries_api_service_b;regions_api_service_RegionsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(regions_api_service_a=void 0!==http.a&&http.a)?regions_api_service_a:Object,String,"function"==typeof(regions_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?regions_api_service_b:Object])],regions_api_service_RegionsApiService);let registries_api_service_RegistriesApiService=class RegistriesApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}canConsumeForm(consumes){for(const consume of consumes)if("multipart/form-data"===consume)return!0;return!1}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}deleteThesaurus(thesaurus,observe="body",reportProgress=!1,options){if(null==thesaurus)throw new Error("Required parameter thesaurus was null or undefined when calling deleteThesaurus.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/registries/vocabularies/${encodeURIComponent(String(thesaurus))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getCrs(id,observe="body",reportProgress=!1,options){if(null==id)throw new Error("Required parameter id was null or undefined when calling getCrs.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/registries/crs/${encodeURIComponent(String(id))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getCrs1(q,type,rows,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=q&&(queryParameters=this.addToHttpParams(queryParameters,q,"q")),null!=type&&(queryParameters=this.addToHttpParams(queryParameters,type,"type")),null!=rows&&(queryParameters=this.addToHttpParams(queryParameters,rows,"rows"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/registries/crs`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getCrsTypes(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/registries/crs/types`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getEntry(uuid,process,transformation,lang,schema,observe="body",reportProgress=!1,options){if(null==uuid)throw new Error("Required parameter uuid was null or undefined when calling getEntry.");let queryParameters=new http.d({encoder:this.encoder});process&&process.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"process")}),null!=transformation&&(queryParameters=this.addToHttpParams(queryParameters,transformation,"transformation")),lang&&lang.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"lang")}),null!=schema&&(queryParameters=this.addToHttpParams(queryParameters,schema,"schema"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/registries/entries/${encodeURIComponent(String(uuid))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getKeywordById(id,thesaurus,lang,keywordOnly,transformation,observe="body",reportProgress=!1,options){if(null==id)throw new Error("Required parameter id was null or undefined when calling getKeywordById.");if(null==thesaurus)throw new Error("Required parameter thesaurus was null or undefined when calling getKeywordById.");let queryParameters=new http.d({encoder:this.encoder});null!=id&&(queryParameters=this.addToHttpParams(queryParameters,id,"id")),null!=thesaurus&&(queryParameters=this.addToHttpParams(queryParameters,thesaurus,"thesaurus")),lang&&lang.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"lang")}),null!=keywordOnly&&(queryParameters=this.addToHttpParams(queryParameters,keywordOnly,"keywordOnly")),null!=transformation&&(queryParameters=this.addToHttpParams(queryParameters,transformation,"transformation"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/registries/vocabularies/keyword`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getThesaurus(thesaurus,observe="body",reportProgress=!1,options){if(null==thesaurus)throw new Error("Required parameter thesaurus was null or undefined when calling getThesaurus.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/registries/vocabularies/${encodeURIComponent(String(thesaurus))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}importSpatialEntries(uuidAttribute,uuidPattern,descriptionAttribute,geomProjectionTo,lenient,onlyBoundingBox,process,schema,uuidProcessing,group,file,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=uuidAttribute&&(queryParameters=this.addToHttpParams(queryParameters,uuidAttribute,"uuidAttribute")),null!=uuidPattern&&(queryParameters=this.addToHttpParams(queryParameters,uuidPattern,"uuidPattern")),null!=descriptionAttribute&&(queryParameters=this.addToHttpParams(queryParameters,descriptionAttribute,"descriptionAttribute")),null!=geomProjectionTo&&(queryParameters=this.addToHttpParams(queryParameters,geomProjectionTo,"geomProjectionTo")),null!=lenient&&(queryParameters=this.addToHttpParams(queryParameters,lenient,"lenient")),null!=onlyBoundingBox&&(queryParameters=this.addToHttpParams(queryParameters,onlyBoundingBox,"onlyBoundingBox")),null!=process&&(queryParameters=this.addToHttpParams(queryParameters,process,"process")),null!=schema&&(queryParameters=this.addToHttpParams(queryParameters,schema,"schema")),null!=uuidProcessing&&(queryParameters=this.addToHttpParams(queryParameters,uuidProcessing,"uuidProcessing")),null!=group&&(queryParameters=this.addToHttpParams(queryParameters,group,"group"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let formParams,useForm=!1;useForm=this.canConsumeForm(["multipart/form-data"]),formParams=useForm?new FormData:new http.d({encoder:this.encoder}),void 0!==file&&(formParams=formParams.append("file",file)||formParams);let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/registries/actions/entries/import/spatial`,formParams,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}previewUpdatedRecordEntries(xpath,uuids,bucket,identifierXpath,propertiesToCopy,substituteAsXLink,fq,observe="body",reportProgress=!1,options){if(null==xpath)throw new Error("Required parameter xpath was null or undefined when calling previewUpdatedRecordEntries.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=xpath&&(queryParameters=this.addToHttpParams(queryParameters,xpath,"xpath")),null!=identifierXpath&&(queryParameters=this.addToHttpParams(queryParameters,identifierXpath,"identifierXpath")),propertiesToCopy&&propertiesToCopy.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"propertiesToCopy")}),null!=substituteAsXLink&&(queryParameters=this.addToHttpParams(queryParameters,substituteAsXLink,"substituteAsXLink")),null!=fq&&(queryParameters=this.addToHttpParams(queryParameters,fq,"fq"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/registries/actions/entries/synchronize`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}searchKeywords(q,lang,rows,start,pLang,thesaurus,type,uri,sort,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=q&&(queryParameters=this.addToHttpParams(queryParameters,q,"q")),null!=lang&&(queryParameters=this.addToHttpParams(queryParameters,lang,"lang")),null!=rows&&(queryParameters=this.addToHttpParams(queryParameters,rows,"rows")),null!=start&&(queryParameters=this.addToHttpParams(queryParameters,start,"start")),pLang&&pLang.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"pLang")}),thesaurus&&thesaurus.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"thesaurus")}),null!=type&&(queryParameters=this.addToHttpParams(queryParameters,type,"type")),null!=uri&&(queryParameters=this.addToHttpParams(queryParameters,uri,"uri")),null!=sort&&(queryParameters=this.addToHttpParams(queryParameters,sort,"sort"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/registries/vocabularies/search`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateRecordEntries(xpath,uuids,bucket,identifierXpath,propertiesToCopy,substituteAsXLink,fq,observe="body",reportProgress=!1,options){if(null==xpath)throw new Error("Required parameter xpath was null or undefined when calling updateRecordEntries.");let queryParameters=new http.d({encoder:this.encoder});uuids&&uuids.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuids")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket")),null!=xpath&&(queryParameters=this.addToHttpParams(queryParameters,xpath,"xpath")),null!=identifierXpath&&(queryParameters=this.addToHttpParams(queryParameters,identifierXpath,"identifierXpath")),propertiesToCopy&&propertiesToCopy.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"propertiesToCopy")}),null!=substituteAsXLink&&(queryParameters=this.addToHttpParams(queryParameters,substituteAsXLink,"substituteAsXLink")),null!=fq&&(queryParameters=this.addToHttpParams(queryParameters,fq,"fq"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/registries/actions/entries/synchronize`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}uploadThesaurus(type,dir,stylesheet,inlineObject2ApiModel,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=type&&(queryParameters=this.addToHttpParams(queryParameters,type,"type")),null!=dir&&(queryParameters=this.addToHttpParams(queryParameters,dir,"dir")),null!=stylesheet&&(queryParameters=this.addToHttpParams(queryParameters,stylesheet,"stylesheet"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/registries/vocabularies`,inlineObject2ApiModel,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}uploadThesaurusFromUrl(url,registryUrl,registryLanguage,type,dir,stylesheet,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=url&&(queryParameters=this.addToHttpParams(queryParameters,url,"url")),null!=registryUrl&&(queryParameters=this.addToHttpParams(queryParameters,registryUrl,"registryUrl")),registryLanguage&&registryLanguage.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"registryLanguage")}),null!=type&&(queryParameters=this.addToHttpParams(queryParameters,type,"type")),null!=dir&&(queryParameters=this.addToHttpParams(queryParameters,dir,"dir")),null!=stylesheet&&(queryParameters=this.addToHttpParams(queryParameters,stylesheet,"stylesheet"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/registries/vocabularies`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var related_api_service_a,related_api_service_b;registries_api_service_RegistriesApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(registries_api_service_a=void 0!==http.a&&http.a)?registries_api_service_a:Object,String,"function"==typeof(registries_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?registries_api_service_b:Object])],registries_api_service_RegistriesApiService);let related_api_service_RelatedApiService=class RelatedApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getRelated1(type,uuid,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});type&&type.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"type")}),uuid&&uuid.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuid")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/related`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var search_api_service_a,search_api_service_b;related_api_service_RelatedApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(related_api_service_a=void 0!==http.a&&http.a)?related_api_service_a:Object,String,"function"==typeof(related_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?related_api_service_b:Object])],related_api_service_RelatedApiService);let search_api_service_SearchApiService=class SearchApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}call(endPoint,bucket,body,observe="body",reportProgress=!1,options){if(null==endPoint)throw new Error("Required parameter endPoint was null or undefined when calling call.");let queryParameters=new http.d({encoder:this.encoder});null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/search/records/${encodeURIComponent(String(endPoint))}`,body,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var selections_api_service_a,selections_api_service_b;search_api_service_SearchApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(search_api_service_a=void 0!==http.a&&http.a)?search_api_service_a:Object,String,"function"==typeof(search_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?search_api_service_b:Object])],search_api_service_SearchApiService);let selections_api_service_SelectionsApiService=class SelectionsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}add(bucket,uuid,observe="body",reportProgress=!1,options){if(null==bucket)throw new Error("Required parameter bucket was null or undefined when calling add.");let queryParameters=new http.d({encoder:this.encoder});uuid&&uuid.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuid")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/selections/${encodeURIComponent(String(bucket))}`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}clear(bucket,uuid,observe="body",reportProgress=!1,options){if(null==bucket)throw new Error("Required parameter bucket was null or undefined when calling clear.");let queryParameters=new http.d({encoder:this.encoder});uuid&&uuid.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuid")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/selections/${encodeURIComponent(String(bucket))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}get(bucket,observe="body",reportProgress=!1,options){if(null==bucket)throw new Error("Required parameter bucket was null or undefined when calling get.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/selections/${encodeURIComponent(String(bucket))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var site_api_service_a,site_api_service_b;selections_api_service_SelectionsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(selections_api_service_a=void 0!==http.a&&http.a)?selections_api_service_a:Object,String,"function"==typeof(selections_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?selections_api_service_b:Object])],selections_api_service_SelectionsApiService);let site_api_service_SiteApiService=class SiteApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}get4(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getInformation(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/info`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getLastActivity(lines,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=lines&&(queryParameters=this.addToHttpParams(queryParameters,lines,"lines"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/logging/activity`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getLastActivityInAZip(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/logging/activity/zip`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getLogFiles(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/logging`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRobotsText(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/robots.txt`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSettingsDetails(set,key,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});set&&set.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"set")}),key&&key.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"key")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/settings/details`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSettingsSet(set,key,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});set&&set.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"set")}),key&&key.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"key")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/settings`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSitemap(format,doc,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=format&&(queryParameters=this.addToHttpParams(queryParameters,format,"format")),null!=doc&&(queryParameters=this.addToHttpParams(queryParameters,doc,"doc"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/sitemap`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSystemInfo(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/info/build`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getXslTransformations(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/info/transforms`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}index1(reset,havingXlinkOnly,indices,bucket,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=reset&&(queryParameters=this.addToHttpParams(queryParameters,reset,"reset")),null!=havingXlinkOnly&&(queryParameters=this.addToHttpParams(queryParameters,havingXlinkOnly,"havingXlinkOnly")),indices&&indices.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"indices")}),null!=bucket&&(queryParameters=this.addToHttpParams(queryParameters,bucket,"bucket"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/site/index`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}indexStatus(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/index/status`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}isCasEnabled(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/info/isCasEnabled`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}isIndexing(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/indexing`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}isReadOnly(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/site/info/readonly`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var sources_api_service_a,sources_api_service_b;site_api_service_SiteApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(site_api_service_a=void 0!==http.a&&http.a)?site_api_service_a:Object,String,"function"==typeof(site_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?site_api_service_b:Object])],site_api_service_SiteApiService);let sources_api_service_SourcesApiService=class SourcesApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getSources1(group,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=group&&(queryParameters=this.addToHttpParams(queryParameters,group,"group"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/sources`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSourcesByType(type,observe="body",reportProgress=!1,options){if(null==type)throw new Error("Required parameter type was null or undefined when calling getSourcesByType.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/sources/${encodeURIComponent(String(type))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var standards_api_service_a,standards_api_service_b;sources_api_service_SourcesApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(sources_api_service_a=void 0!==http.a&&http.a)?sources_api_service_a:Object,String,"function"==typeof(sources_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?sources_api_service_b:Object])],sources_api_service_SourcesApiService);let standards_api_service_StandardsApiService=class StandardsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getConfiguration(schema,observe="body",reportProgress=!1,options){if(null==schema)throw new Error("Required parameter schema was null or undefined when calling getConfiguration.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/standards/${encodeURIComponent(String(schema))}/batchconfiguration`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getConfigurations(schema,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});schema&&schema.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"schema")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/standards/batchconfiguration`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getConfigurations1(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/standards`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getEditorAssociatedPanelConfiguration(schema,name,observe="body",reportProgress=!1,options){if(null==schema)throw new Error("Required parameter schema was null or undefined when calling getEditorAssociatedPanelConfiguration.");if(null==name)throw new Error("Required parameter name was null or undefined when calling getEditorAssociatedPanelConfiguration.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/standards/${encodeURIComponent(String(schema))}/editor/associatedpanel/config/${encodeURIComponent(String(name))}.json`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getElementDetails(schema,element,parent,displayIf,xpath,isoType,observe="body",reportProgress=!1,options){if(null==schema)throw new Error("Required parameter schema was null or undefined when calling getElementDetails.");if(null==element)throw new Error("Required parameter element was null or undefined when calling getElementDetails.");let queryParameters=new http.d({encoder:this.encoder});null!=parent&&(queryParameters=this.addToHttpParams(queryParameters,parent,"parent")),null!=displayIf&&(queryParameters=this.addToHttpParams(queryParameters,displayIf,"displayIf")),null!=xpath&&(queryParameters=this.addToHttpParams(queryParameters,xpath,"xpath")),null!=isoType&&(queryParameters=this.addToHttpParams(queryParameters,isoType,"isoType"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/standards/${encodeURIComponent(String(schema))}/descriptors/${encodeURIComponent(String(element))}/details`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSchemaCodelistsWithDetails(schema,codelist,parent,displayIf,xpath,isoType,observe="body",reportProgress=!1,options){if(null==schema)throw new Error("Required parameter schema was null or undefined when calling getSchemaCodelistsWithDetails.");if(null==codelist)throw new Error("Required parameter codelist was null or undefined when calling getSchemaCodelistsWithDetails.");let queryParameters=new http.d({encoder:this.encoder});null!=parent&&(queryParameters=this.addToHttpParams(queryParameters,parent,"parent")),null!=displayIf&&(queryParameters=this.addToHttpParams(queryParameters,displayIf,"displayIf")),null!=xpath&&(queryParameters=this.addToHttpParams(queryParameters,xpath,"xpath")),null!=isoType&&(queryParameters=this.addToHttpParams(queryParameters,isoType,"isoType"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","application/xml"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/standards/${encodeURIComponent(String(schema))}/codelists/${encodeURIComponent(String(codelist))}/details`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSchemaTranslations(schema,codelist,parent,displayIf,xpath,isoType,observe="body",reportProgress=!1,options){if(null==schema)throw new Error("Required parameter schema was null or undefined when calling getSchemaTranslations.");if(null==codelist)throw new Error("Required parameter codelist was null or undefined when calling getSchemaTranslations.");let queryParameters=new http.d({encoder:this.encoder});null!=parent&&(queryParameters=this.addToHttpParams(queryParameters,parent,"parent")),null!=displayIf&&(queryParameters=this.addToHttpParams(queryParameters,displayIf,"displayIf")),null!=xpath&&(queryParameters=this.addToHttpParams(queryParameters,xpath,"xpath")),null!=isoType&&(queryParameters=this.addToHttpParams(queryParameters,isoType,"isoType"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/standards/${encodeURIComponent(String(schema))}/codelists/${encodeURIComponent(String(codelist))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}reloadSchema(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/standards/reload`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var status_api_service_a,status_api_service_b;standards_api_service_StandardsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(standards_api_service_a=void 0!==http.a&&http.a)?standards_api_service_a:Object,String,"function"==typeof(standards_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?standards_api_service_b:Object])],standards_api_service_StandardsApiService);let status_api_service_StatusApiService=class StatusApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getStatus1(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/status`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getStatusByType1(type,observe="body",reportProgress=!1,options){if(null==type)throw new Error("Required parameter type was null or undefined when calling getStatusByType1.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/status/${encodeURIComponent(String(type))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var tags_api_service_a,tags_api_service_b;status_api_service_StatusApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(status_api_service_a=void 0!==http.a&&http.a)?status_api_service_a:Object,String,"function"==typeof(status_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?status_api_service_b:Object])],status_api_service_StatusApiService);let tags_api_service_TagsApiService=class TagsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getTag(tagIdentifier,observe="body",reportProgress=!1,options){if(null==tagIdentifier)throw new Error("Required parameter tagIdentifier was null or undefined when calling getTag.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/tags/${encodeURIComponent(String(tagIdentifier))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getTags(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/tags`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateTag(tagIdentifier,metadataCategoryApiModel,observe="body",reportProgress=!1,options){if(null==tagIdentifier)throw new Error("Required parameter tagIdentifier was null or undefined when calling updateTag.");if(null==metadataCategoryApiModel)throw new Error("Required parameter metadataCategoryApiModel was null or undefined when calling updateTag.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/tags/${encodeURIComponent(String(tagIdentifier))}`,metadataCategoryApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var tools_api_service_a,tools_api_service_b;tags_api_service_TagsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(tags_api_service_a=void 0!==http.a&&http.a)?tags_api_service_a:Object,String,"function"==typeof(tags_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?tags_api_service_b:Object])],tags_api_service_TagsApiService);let tools_api_service_ToolsApiService=class ToolsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}buildSLD(url,layers,filters,observe="body",reportProgress=!1,options){if(null==url)throw new Error("Required parameter url was null or undefined when calling buildSLD.");if(null==layers)throw new Error("Required parameter layers was null or undefined when calling buildSLD.");if(null==filters)throw new Error("Required parameter filters was null or undefined when calling buildSLD.");let queryParameters=new http.d({encoder:this.encoder});null!=url&&(queryParameters=this.addToHttpParams(queryParameters,url,"url")),null!=layers&&(queryParameters=this.addToHttpParams(queryParameters,layers,"layers")),null!=filters&&(queryParameters=this.addToHttpParams(queryParameters,filters,"filters"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/tools/ogc/sld`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deteleSLD(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/tools/ogc/sld`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getSLD(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/tools/ogc/sld`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getTranslations(type,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});type&&type.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"type")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/tools/i18n/db`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var ui_api_service_a,ui_api_service_b;tools_api_service_ToolsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(tools_api_service_a=void 0!==http.a&&http.a)?tools_api_service_a:Object,String,"function"==typeof(tools_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?tools_api_service_b:Object])],tools_api_service_ToolsApiService);let ui_api_service_UiApiService=class UiApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}getUiConfiguration(uiIdentifier,observe="body",reportProgress=!1,options){if(null==uiIdentifier)throw new Error("Required parameter uiIdentifier was null or undefined when calling getUiConfiguration.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/ui/${encodeURIComponent(String(uiIdentifier))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUiConfigurations(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/ui`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateUiConfiguration(uiIdentifier,uiSettingApiModel,observe="body",reportProgress=!1,options){if(null==uiIdentifier)throw new Error("Required parameter uiIdentifier was null or undefined when calling updateUiConfiguration.");if(null==uiSettingApiModel)throw new Error("Required parameter uiSettingApiModel was null or undefined when calling updateUiConfiguration.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","*/*"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/ui/${encodeURIComponent(String(uiIdentifier))}`,uiSettingApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var userfeedback_api_service_a,userfeedback_api_service_b;ui_api_service_UiApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(ui_api_service_a=void 0!==http.a&&http.a)?ui_api_service_a:Object,String,"function"==typeof(ui_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?ui_api_service_b:Object])],ui_api_service_UiApiService);let userfeedback_api_service_UserfeedbackApiService=class UserfeedbackApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}deleteUserFeedback(uuid,observe="body",reportProgress=!1,options){if(null==uuid)throw new Error("Required parameter uuid was null or undefined when calling deleteUserFeedback.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/userfeedback/${encodeURIComponent(String(uuid))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getMetadataRating(metadataUuid,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getMetadataRating.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/userfeedbackrating`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getRatingCriteria(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/userfeedback/ratingcriteria`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUserComment(uuid,observe="body",reportProgress=!1,options){if(null==uuid)throw new Error("Required parameter uuid was null or undefined when calling getUserComment.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/userfeedback/${encodeURIComponent(String(uuid))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUserComments(metadataUuid,size,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=metadataUuid&&(queryParameters=this.addToHttpParams(queryParameters,metadataUuid,"metadataUuid")),null!=size&&(queryParameters=this.addToHttpParams(queryParameters,size,"size"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/userfeedback`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUserCommentsOnARecord(metadataUuid,size,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling getUserCommentsOnARecord.");let queryParameters=new http.d({encoder:this.encoder});null!=size&&(queryParameters=this.addToHttpParams(queryParameters,size,"size"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/userfeedback`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}newUserFeedback(userFeedbackDTOApiModel,observe="body",reportProgress=!1,options){if(null==userFeedbackDTOApiModel)throw new Error("Required parameter userFeedbackDTOApiModel was null or undefined when calling newUserFeedback.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/userfeedback`,userFeedbackDTOApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}publish1(uuid,observe="body",reportProgress=!1,options){if(null==uuid)throw new Error("Required parameter uuid was null or undefined when calling publish1.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/userfeedback/${encodeURIComponent(String(uuid))}/publish`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}sendEmailToContact(metadataUuid,name,org,email,comments,recaptcha,phone,subject,_function,type,category,metadataEmail,observe="body",reportProgress=!1,options){if(null==metadataUuid)throw new Error("Required parameter metadataUuid was null or undefined when calling sendEmailToContact.");if(null==name)throw new Error("Required parameter name was null or undefined when calling sendEmailToContact.");if(null==org)throw new Error("Required parameter org was null or undefined when calling sendEmailToContact.");if(null==email)throw new Error("Required parameter email was null or undefined when calling sendEmailToContact.");if(null==comments)throw new Error("Required parameter comments was null or undefined when calling sendEmailToContact.");let queryParameters=new http.d({encoder:this.encoder});null!=recaptcha&&(queryParameters=this.addToHttpParams(queryParameters,recaptcha,"recaptcha")),null!=name&&(queryParameters=this.addToHttpParams(queryParameters,name,"name")),null!=org&&(queryParameters=this.addToHttpParams(queryParameters,org,"org")),null!=email&&(queryParameters=this.addToHttpParams(queryParameters,email,"email")),null!=comments&&(queryParameters=this.addToHttpParams(queryParameters,comments,"comments")),null!=phone&&(queryParameters=this.addToHttpParams(queryParameters,phone,"phone")),null!=subject&&(queryParameters=this.addToHttpParams(queryParameters,subject,"subject")),null!=_function&&(queryParameters=this.addToHttpParams(queryParameters,_function,"function")),null!=type&&(queryParameters=this.addToHttpParams(queryParameters,type,"type")),null!=category&&(queryParameters=this.addToHttpParams(queryParameters,category,"category")),null!=metadataEmail&&(queryParameters=this.addToHttpParams(queryParameters,metadataEmail,"metadataEmail"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/records/${encodeURIComponent(String(metadataUuid))}/alert`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var users_api_service_a,users_api_service_b;userfeedback_api_service_UserfeedbackApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(userfeedback_api_service_a=void 0!==http.a&&http.a)?userfeedback_api_service_a:Object,String,"function"==typeof(userfeedback_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?userfeedback_api_service_b:Object])],userfeedback_api_service_UserfeedbackApiService);let users_api_service_UsersApiService=class UsersApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}createUser(userDtoApiModel,observe="body",reportProgress=!1,options){if(null==userDtoApiModel)throw new Error("Required parameter userDtoApiModel was null or undefined when calling createUser.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/users`,userDtoApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteUser(userIdentifier,observe="body",reportProgress=!1,options){if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling deleteUser.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/users/${encodeURIComponent(String(userIdentifier))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUser(userIdentifier,observe="body",reportProgress=!1,options){if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling getUser.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/users/${encodeURIComponent(String(userIdentifier))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUsers(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/users`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUsers1(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/users/owners`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}registerUser(userRegisterDtoApiModel,observe="body",reportProgress=!1,options){if(null==userRegisterDtoApiModel)throw new Error("Required parameter userRegisterDtoApiModel was null or undefined when calling registerUser.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/user/actions/register`,userRegisterDtoApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}resetUserPassword(userIdentifier,password,password2,observe="body",reportProgress=!1,options){if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling resetUserPassword.");if(null==password)throw new Error("Required parameter password was null or undefined when calling resetUserPassword.");if(null==password2)throw new Error("Required parameter password2 was null or undefined when calling resetUserPassword.");let queryParameters=new http.d({encoder:this.encoder});null!=password&&(queryParameters=this.addToHttpParams(queryParameters,password,"password")),null!=password2&&(queryParameters=this.addToHttpParams(queryParameters,password2,"password2"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.post(`${this.configuration.basePath}/users/${encodeURIComponent(String(userIdentifier))}/actions/forget-password`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}retrieveAllUserGroups(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/users/groups`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}retrieveUserGroups(userIdentifier,observe="body",reportProgress=!1,options){if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling retrieveUserGroups.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/users/${encodeURIComponent(String(userIdentifier))}/groups`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}saveOwners(transferRequestApiModel,observe="body",reportProgress=!1,options){if(null==transferRequestApiModel)throw new Error("Required parameter transferRequestApiModel was null or undefined when calling saveOwners.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/users/owners`,transferRequestApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}sendPasswordByEmail(username,observe="body",reportProgress=!1,options){if(null==username)throw new Error("Required parameter username was null or undefined when calling sendPasswordByEmail.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/user/${encodeURIComponent(String(username))}/actions/forgot-password`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updatePassword(username,passwordUpdateParameterApiModel,observe="body",reportProgress=!1,options){if(null==username)throw new Error("Required parameter username was null or undefined when calling updatePassword.");if(null==passwordUpdateParameterApiModel)throw new Error("Required parameter passwordUpdateParameterApiModel was null or undefined when calling updatePassword.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json","text/plain"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.patch(`${this.configuration.basePath}/user/${encodeURIComponent(String(username))}`,passwordUpdateParameterApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateUser(userIdentifier,userDtoApiModel,observe="body",reportProgress=!1,options){if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling updateUser.");if(null==userDtoApiModel)throw new Error("Required parameter userDtoApiModel was null or undefined when calling updateUser.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/users/${encodeURIComponent(String(userIdentifier))}`,userDtoApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var usersearches_api_service_a,usersearches_api_service_b;users_api_service_UsersApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(users_api_service_a=void 0!==http.a&&http.a)?users_api_service_a:Object,String,"function"==typeof(users_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?users_api_service_b:Object])],users_api_service_UsersApiService);let usersearches_api_service_UsersearchesApiService=class UsersearchesApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}createUserCustomSearch(userSearchDtoApiModel,observe="body",reportProgress=!1,options){if(null==userSearchDtoApiModel)throw new Error("Required parameter userSearchDtoApiModel was null or undefined when calling createUserCustomSearch.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/usersearches`,userSearchDtoApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteUserCustomSerach(searchIdentifier,observe="body",reportProgress=!1,options){if(null==searchIdentifier)throw new Error("Required parameter searchIdentifier was null or undefined when calling deleteUserCustomSerach.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/usersearches/${encodeURIComponent(String(searchIdentifier))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getAllUserCustomSearches(featuredType,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=featuredType&&(queryParameters=this.addToHttpParams(queryParameters,featuredType,"featuredType"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/usersearches/all`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getAllUserCustomSearchesPage(featuredType,search,offset,limit,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=featuredType&&(queryParameters=this.addToHttpParams(queryParameters,featuredType,"featuredType")),null!=search&&(queryParameters=this.addToHttpParams(queryParameters,search,"search")),null!=offset&&(queryParameters=this.addToHttpParams(queryParameters,offset,"offset")),null!=limit&&(queryParameters=this.addToHttpParams(queryParameters,limit,"limit"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/usersearches/allpaginated`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getFeaturedUserCustomSearches(type,observe="body",reportProgress=!1,options){let queryParameters=new http.d({encoder:this.encoder});null!=type&&(queryParameters=this.addToHttpParams(queryParameters,type,"type"));let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/usersearches/featured`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUserCustomSearch(searchIdentifier,observe="body",reportProgress=!1,options){if(null==searchIdentifier)throw new Error("Required parameter searchIdentifier was null or undefined when calling getUserCustomSearch.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/usersearches/${encodeURIComponent(String(searchIdentifier))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}getUserCustomSearches(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/usersearches`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}updateCustomUserSearch(searchIdentifier,userSearchDtoApiModel,observe="body",reportProgress=!1,options){if(null==searchIdentifier)throw new Error("Required parameter searchIdentifier was null or undefined when calling updateCustomUserSearch.");if(null==userSearchDtoApiModel)throw new Error("Required parameter userSearchDtoApiModel was null or undefined when calling updateCustomUserSearch.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/usersearches/${encodeURIComponent(String(searchIdentifier))}`,userSearchDtoApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};var userselections_api_service_a,userselections_api_service_b;usersearches_api_service_UsersearchesApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(usersearches_api_service_a=void 0!==http.a&&http.a)?usersearches_api_service_a:Object,String,"function"==typeof(usersearches_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?usersearches_api_service_b:Object])],usersearches_api_service_UsersearchesApiService);let userselections_api_service_UserselectionsApiService=class UserselectionsApiService{constructor(httpClient,basePath,configuration){this.httpClient=httpClient,this.basePath="http://localhost:8080/geonetwork/srv/api",this.defaultHeaders=new http.c,this.configuration=new openapi_configuration.a,configuration&&(this.configuration=configuration),"string"!=typeof this.configuration.basePath&&("string"!=typeof basePath&&(basePath=this.basePath),this.configuration.basePath=basePath),this.encoder=this.configuration.encoder||new CustomHttpParameterCodec}addToHttpParams(httpParams,value,key){return httpParams="object"==typeof value&&value instanceof Date==!1?this.addToHttpParamsRecursive(httpParams,value):this.addToHttpParamsRecursive(httpParams,value,key)}addToHttpParamsRecursive(httpParams,value,key){if(null==value)return httpParams;if("object"==typeof value)if(Array.isArray(value))value.forEach(elem=>httpParams=this.addToHttpParamsRecursive(httpParams,elem,key));else if(value instanceof Date){if(null==key)throw Error("key may not be null if value is Date");httpParams=httpParams.append(key,value.toISOString().substr(0,10))}else Object.keys(value).forEach(k=>httpParams=this.addToHttpParamsRecursive(httpParams,value[k],null!=key?`${key}.${k}`:k));else{if(null==key)throw Error("key may not be null if value is not object or array");httpParams=httpParams.append(key,value)}return httpParams}addToUserSelection(selectionIdentifier,userIdentifier,uuid,observe="body",reportProgress=!1,options){if(null==selectionIdentifier)throw new Error("Required parameter selectionIdentifier was null or undefined when calling addToUserSelection.");if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling addToUserSelection.");let queryParameters=new http.d({encoder:this.encoder});uuid&&uuid.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuid")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/userselections/${encodeURIComponent(String(selectionIdentifier))}/${encodeURIComponent(String(userIdentifier))}`,null,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}createPersistentSelectionType(selectionApiModel,observe="body",reportProgress=!1,options){if(null==selectionApiModel)throw new Error("Required parameter selectionApiModel was null or undefined when calling createPersistentSelectionType.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));const httpContentTypeSelected=this.configuration.selectHeaderContentType(["application/json"]);void 0!==httpContentTypeSelected&&(headers=headers.set("Content-Type",httpContentTypeSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.put(`${this.configuration.basePath}/userselections`,selectionApiModel,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}deleteFromUserSelection(selectionIdentifier,userIdentifier,uuid,observe="body",reportProgress=!1,options){if(null==selectionIdentifier)throw new Error("Required parameter selectionIdentifier was null or undefined when calling deleteFromUserSelection.");if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling deleteFromUserSelection.");let queryParameters=new http.d({encoder:this.encoder});uuid&&uuid.forEach(element=>{queryParameters=this.addToHttpParams(queryParameters,element,"uuid")});let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.delete(`${this.configuration.basePath}/userselections/${encodeURIComponent(String(selectionIdentifier))}/${encodeURIComponent(String(userIdentifier))}`,{params:queryParameters,responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}get1(selectionIdentifier,userIdentifier,observe="body",reportProgress=!1,options){if(null==selectionIdentifier)throw new Error("Required parameter selectionIdentifier was null or undefined when calling get1.");if(null==userIdentifier)throw new Error("Required parameter userIdentifier was null or undefined when calling get1.");let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/userselections/${encodeURIComponent(String(selectionIdentifier))}/${encodeURIComponent(String(userIdentifier))}`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}get2(observe="body",reportProgress=!1,options){let headers=this.defaultHeaders,httpHeaderAcceptSelected=options&&options.httpHeaderAccept;if(void 0===httpHeaderAcceptSelected){const httpHeaderAccepts=["application/json"];httpHeaderAcceptSelected=this.configuration.selectHeaderAccept(httpHeaderAccepts)}void 0!==httpHeaderAcceptSelected&&(headers=headers.set("Accept",httpHeaderAcceptSelected));let responseType="json";return httpHeaderAcceptSelected&&httpHeaderAcceptSelected.startsWith("text")&&(responseType="text"),this.httpClient.get(`${this.configuration.basePath}/userselections`,{responseType:responseType,withCredentials:this.configuration.withCredentials,headers:headers,observe:observe,reportProgress:reportProgress})}};userselections_api_service_UserselectionsApiService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(1,Object(core.Optional)()),Object(tslib_es6.e)(1,Object(core.Inject)(variables.a)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(userselections_api_service_a=void 0!==http.a&&http.a)?userselections_api_service_a:Object,String,"function"==typeof(userselections_api_service_b=void 0!==openapi_configuration.a&&openapi_configuration.a)?userselections_api_service_b:Object])],userselections_api_service_UserselectionsApiService)},531:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ColorService}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),chroma_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(41),chroma_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(chroma_js__WEBPACK_IMPORTED_MODULE_2__);let ColorService=class ColorService{constructor(){}static applyCssVariables(primary,secondary,main,background){const applyColor=(name,color)=>{document.documentElement.style.setProperty(`--color-${name}`,color.css())},black=chroma_js__WEBPACK_IMPORTED_MODULE_2___default()("black"),white=chroma_js__WEBPACK_IMPORTED_MODULE_2___default()("white");applyColor("primary",chroma_js__WEBPACK_IMPORTED_MODULE_2___default()(primary)),applyColor("primary-lighter",chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([primary,white]).mode("lab")(.3)),applyColor("primary-lightest",chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([primary,white]).mode("lab")(.6)),applyColor("primary-darker",chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([primary,black]).mode("lab")(.3)),applyColor("primary-darkest",chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([primary,black]).mode("lab")(.6)),applyColor("secondary",chroma_js__WEBPACK_IMPORTED_MODULE_2___default()(secondary)),applyColor("secondary-lighter",chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([secondary,white]).mode("lab")(.3)),applyColor("secondary-lightest",chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([secondary,white]).mode("lab")(.6)),applyColor("secondary-darker",chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([secondary,black]).mode("lab")(.3)),applyColor("secondary-darkest",chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([secondary,black]).mode("lab")(.6)),applyColor("main",chroma_js__WEBPACK_IMPORTED_MODULE_2___default()(main)),applyColor("background",chroma_js__WEBPACK_IMPORTED_MODULE_2___default()(background));const scale=chroma_js__WEBPACK_IMPORTED_MODULE_2___default.a.scale([background,main]).mode("lab");applyColor("gray-100",scale(.1)),applyColor("gray-200",scale(.2)),applyColor("gray-300",scale(.3)),applyColor("gray-400",scale(.4)),applyColor("gray-500",scale(.5)),applyColor("gray-600",scale(.6)),applyColor("gray-700",scale(.7)),applyColor("gray-800",scale(.8)),applyColor("gray-900",scale(.9))}};ColorService=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)({providedIn:"root"}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.d)("design:paramtypes",[])],ColorService)},533:function(module,exports,__webpack_require__){__webpack_require__(534),__webpack_require__(679),__webpack_require__(680),__webpack_require__(922),module.exports=__webpack_require__(924)},598:function(module,exports){},680:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(32);module._StorybookPreserveDecorators=!0,Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(891),__webpack_require__(919)],module)}.call(this,__webpack_require__(117)(module))},8:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return BASE_PATH}));const BASE_PATH=new(__webpack_require__(0).InjectionToken)("basePath")},85:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return UiModule}));var tslib_es6=__webpack_require__(1),core=__webpack_require__(0),dropdown_selector_component=__webpack_require__(125),platform_browser=__webpack_require__(171),autocomplete_component=__webpack_require__(175),record_summary_component=__webpack_require__(176),button_component=__webpack_require__(242),text_input_component=__webpack_require__(113),color_scale_component=__webpack_require__(243);let UiModule=class UiModule{};UiModule=Object(tslib_es6.b)([Object(core.NgModule)({declarations:[dropdown_selector_component.a,autocomplete_component.a,record_summary_component.a,button_component.a,text_input_component.a,color_scale_component.a],imports:[platform_browser.BrowserModule],exports:[dropdown_selector_component.a,autocomplete_component.a,record_summary_component.a,button_component.a,text_input_component.a]})],UiModule)},891:function(module,exports,__webpack_require__){var map={"./src/lib/color-scale/color-scale.stories.ts":892,"./src/lib/dropdown-selector/dropdown.stories.ts":904,"./src/lib/text-input/text-input.stories.ts":917,"./stories/index.stories.js":918};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=891},892:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(32),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(25),_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(58),_ui_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(85),_color_scale_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(243),_common_src_lib_color_service__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(531);const moduleMetadatas={imports:[_ui_src__WEBPACK_IMPORTED_MODULE_3__.a]};Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.storiesOf)("Presentation components",module).addDecorator(Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)(moduleMetadatas)).addDecorator(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.withKnobs).addDecorator(_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_2__.withA11y).add("ColorScaleComponent",()=>({component:_color_scale_component__WEBPACK_IMPORTED_MODULE_4__.a})),_common_src_lib_color_service__WEBPACK_IMPORTED_MODULE_5__.a.applyCssVariables("#e73f51","#c2e9dc","#212029","#fdfbff")}.call(this,__webpack_require__(117)(module))},904:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _dropdown_selector_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(125),_storybook_angular__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(32),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(25),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(244),_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(58);const moduleMetadatas={imports:[__webpack_require__(85).a]};Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.storiesOf)("Presentation components",module).addDecorator(Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.moduleMetadata)(moduleMetadatas)).addDecorator(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.withKnobs).addDecorator(_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_4__.withA11y).add("DropdownSelectorComponent",()=>({component:_dropdown_selector_component__WEBPACK_IMPORTED_MODULE_0__.a,props:{title:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.text)("title","my title"),ariaName:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.text)("aria name","select-dropdown"),choices:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.object)("choices",[{label:"My Choice 1",value:"choice1"},{label:"My Choice 2",value:"choice2"},{label:"My Choice 3",value:"choice3"}]),selected:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.text)("selected value","choice1"),selectValue:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.action)("output")}}))}.call(this,__webpack_require__(117)(module))},917:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(32),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(25),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(244),_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(58),_lib_ui__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(85),_text_input_component__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(113);const moduleMetadatas={imports:[_lib_ui__WEBPACK_IMPORTED_MODULE_4__.a]};Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.storiesOf)("Presentation components",module).addDecorator(Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)(moduleMetadatas)).addDecorator(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.withKnobs).addDecorator(_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_3__.withA11y).add("TextInputComponent",()=>({component:_text_input_component__WEBPACK_IMPORTED_MODULE_5__.a,props:{value:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("input value",""),change:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("output"),hint:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.text)("input hint","Put something here!")}}))}.call(this,__webpack_require__(117)(module))},918:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _src_lib_autocomplete_autocomplete_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(175),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(82),_storybook_angular__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(32),_src_lib_record_summary_record_summary_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(176),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(25),_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(58);__webpack_require__(242);const moduleMetadatas={imports:[__webpack_require__(85).a]};Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_2__.storiesOf)("UI",module).addDecorator(Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_2__.moduleMetadata)(moduleMetadatas)).addDecorator(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_4__.withKnobs).addDecorator(_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_5__.withA11y).add("AutocompleteComponent",()=>({component:_src_lib_autocomplete_autocomplete_component__WEBPACK_IMPORTED_MODULE_0__.a,props:{placeholder:"Full text search",action:()=>Object(rxjs__WEBPACK_IMPORTED_MODULE_1__.a)(["Hello","World"])}})).add("RecordSummaryComponent",()=>({component:_src_lib_record_summary_record_summary_component__WEBPACK_IMPORTED_MODULE_3__.a,props:{record:{uuid:"uiiudiiddeaafdjsqmlkfdq",title:"A very nice record",thumbnailUrl:"https://sextant.ifremer.fr/var/storage/images/_aliases/listitem_thumbnail/medias-ifremer/medias-sextant/accueil/cartes-thematiques/adcp/1595636-3-fre-FR/ADCP.png",abstract:"this is a great abstract",url:"www.goto.com"}},parameters:{}})).add("ButtonComponent",()=>({template:'<ui-button [type]="type">{{content}}</ui-button>',props:{type:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_4__.select)("buttonType",["primary","secondary","default"]),content:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_4__.text)("buttonContent","My Button")}}))}.call(this,__webpack_require__(117)(module))},919:function(module,exports,__webpack_require__){var map={"./search-wc/stories/angular.stories.ts":920,"./stories/angular.stories.js":921};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=919},920:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(32),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(25),_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(58),_src_app_app_module__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(245),_src_app_search_snapshot_wc_search_snapshot_wc_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(131);const moduleMetadatas={imports:[_src_app_app_module__WEBPACK_IMPORTED_MODULE_3__.a]};Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.storiesOf)("Angular components",module).addDecorator(Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)(moduleMetadatas)).addDecorator(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.withKnobs).addDecorator(_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_2__.withA11y).add("Search Snapshot",()=>({component:_src_app_search_snapshot_wc_search_snapshot_wc_component__WEBPACK_IMPORTED_MODULE_4__.a,props:{primaryColor:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.color)("Primary Color","blue"),secondaryColor:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.color)("Secondary Color","grey")}}))}.call(this,__webpack_require__(117)(module))},921:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(32),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(25),_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(58),_search_wc_src_app_search_snapshot_wc_search_snapshot_wc_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(131);const moduleMetadatas={imports:[__webpack_require__(245).a]};Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.storiesOf)("Angular components",module).addDecorator(Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)(moduleMetadatas)).addDecorator(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.withKnobs).addDecorator(_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_2__.withA11y).add("Search Snapshot",()=>({component:_search_wc_src_app_search_snapshot_wc_search_snapshot_wc_component__WEBPACK_IMPORTED_MODULE_3__.a,props:{primaryColor:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.color)("Primary Color","blue"),secondaryColor:Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.color)("Secondary Color","grey")}}))}.call(this,__webpack_require__(117)(module))},922:function(module,exports,__webpack_require__){var api=__webpack_require__(528),content=__webpack_require__(923);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},923:function(module,exports,__webpack_require__){(exports=__webpack_require__(529)(!1)).push([module.i,'/* import tailwind styles */\n\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n  padding: 0;\n}\n\n/**\n * Work around a Firefox/IE bug where the transparent `button` background\n * results in a loss of the default `button` focus styles.\n */\n\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user\'s configured `sans` font-family (with Tailwind\'s default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind\'s default "normal" line-height so the user isn\'t forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it\'s border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e2e8f0; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  color: #a0aec0;\n}\n\ninput::-ms-input-placeholder, textarea::-ms-input-placeholder {\n  color: #a0aec0;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  color: #a0aec0;\n}\n\nbutton,\n[role="button"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don\'t inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured \'mono\' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * \'mono\' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;\n}\n\n/**\n * Make replaced elements `display: block` by default as that\'s\n * the behavior you want almost all of the time. Inspired by\n * CSS Remedy, with `svg` added as well.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their instrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* tailwind start components */\n\n.container {\n  width: 100%;\n}\n\n@media (min-width: 640px) {\n  .container {\n    max-width: 640px;\n  }\n}\n\n@media (min-width: 768px) {\n  .container {\n    max-width: 768px;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    max-width: 1024px;\n  }\n}\n\n@media (min-width: 1280px) {\n  .container {\n    max-width: 1280px;\n  }\n}\n\n/* tailwind end components */\n\n.appearance-none {\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n}\n\n.bg-gray-200 {\n  --bg-opacity: 1;\n  background-color: #edf2f7;\n  background-color: rgba(237, 242, 247, var(--bg-opacity));\n}\n\n.bg-gray-300 {\n  --bg-opacity: 1;\n  background-color: #e2e8f0;\n  background-color: rgba(226, 232, 240, var(--bg-opacity));\n}\n\n.bg-gray-500 {\n  --bg-opacity: 1;\n  background-color: #a0aec0;\n  background-color: rgba(160, 174, 192, var(--bg-opacity));\n}\n\n.bg-primary {\n  background-color: var(--color-primary);\n}\n\n.bg-primary-lighter {\n  background-color: var(--color-primary-lighter);\n}\n\n.bg-primary-lightest {\n  background-color: var(--color-primary-lightest);\n}\n\n.bg-primary-darker {\n  background-color: var(--color-primary-darker);\n}\n\n.bg-primary-darkest {\n  background-color: var(--color-primary-darkest);\n}\n\n.bg-secondary {\n  background-color: var(--color-secondary);\n}\n\n.bg-secondary-lighter {\n  background-color: var(--color-secondary-lighter);\n}\n\n.bg-secondary-lightest {\n  background-color: var(--color-secondary-lightest);\n}\n\n.bg-secondary-darker {\n  background-color: var(--color-secondary-darker);\n}\n\n.bg-secondary-darkest {\n  background-color: var(--color-secondary-darkest);\n}\n\n.bg-main {\n  background-color: var(--color-main);\n}\n\n.bg-background {\n  background-color: var(--color-background);\n}\n\n.focus\\:bg-background:focus {\n  background-color: var(--color-background);\n}\n\n.bg-center {\n  background-position: center;\n}\n\n.bg-no-repeat {\n  background-repeat: no-repeat;\n}\n\n.bg-cover {\n  background-size: cover;\n}\n\n.border-gray-800 {\n  --border-opacity: 1;\n  border-color: #2d3748;\n  border-color: rgba(45, 55, 72, var(--border-opacity));\n}\n\n.border-primary-darkest {\n  border-color: var(--color-primary-darkest);\n}\n\n.border-secondary {\n  border-color: var(--color-secondary);\n}\n\n.border-secondary-darkest {\n  border-color: var(--color-secondary-darkest);\n}\n\n.focus\\:border-gray-900:focus {\n  --border-opacity: 1;\n  border-color: #1a202c;\n  border-color: rgba(26, 32, 44, var(--border-opacity));\n}\n\n.rounded {\n  border-radius: 0.25rem;\n}\n\n.border-2 {\n  border-width: 2px;\n}\n\n.border {\n  border-width: 1px;\n}\n\n.border-b-4 {\n  border-bottom-width: 4px;\n}\n\n.block {\n  display: block;\n}\n\n.flex {\n  display: flex;\n}\n\n.table {\n  display: table;\n}\n\n.grid {\n  display: grid;\n}\n\n.flex-row {\n  flex-direction: row;\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.flex-grow {\n  flex-grow: 1;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.h-4 {\n  height: 1rem;\n}\n\n.h-6 {\n  height: 1.5rem;\n}\n\n.h-32 {\n  height: 8rem;\n}\n\n.h-full {\n  height: 100%;\n}\n\n.text-xs {\n  font-size: 0.75rem;\n}\n\n.text-base {\n  font-size: 1rem;\n}\n\n.text-lg {\n  font-size: 1.125rem;\n}\n\n.text-3xl {\n  font-size: 1.875rem;\n}\n\n.leading-tight {\n  line-height: 1.25;\n}\n\n.m-2 {\n  margin: 0.5rem;\n}\n\n.mx-4 {\n  margin-left: 1rem;\n  margin-right: 1rem;\n}\n\n.mr-2 {\n  margin-right: 0.5rem;\n}\n\n.mb-2 {\n  margin-bottom: 0.5rem;\n}\n\n.mr-3 {\n  margin-right: 0.75rem;\n}\n\n.mb-3 {\n  margin-bottom: 0.75rem;\n}\n\n.focus\\:outline-none:focus {\n  outline: 0;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.p-4 {\n  padding: 1rem;\n}\n\n.p-5 {\n  padding: 1.25rem;\n}\n\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.px-2 {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.px-3 {\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n}\n\n.py-4 {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.px-6 {\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n}\n\n.pr-6 {\n  padding-right: 1.5rem;\n}\n\n.pointer-events-none {\n  pointer-events: none;\n}\n\n.static {\n  position: static;\n}\n\n.absolute {\n  position: absolute;\n}\n\n.relative {\n  position: relative;\n}\n\n.inset-y-0 {\n  top: 0;\n  bottom: 0;\n}\n\n.right-0 {\n  right: 0;\n}\n\n.shadow-md {\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n.hover\\:shadow-lg:hover {\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n}\n\n.hover\\:shadow-outline:hover {\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5);\n}\n\n.fill-current {\n  fill: currentColor;\n}\n\n.text-right {\n  text-align: right;\n}\n\n.text-gray-700 {\n  --text-opacity: 1;\n  color: #4a5568;\n  color: rgba(74, 85, 104, var(--text-opacity));\n}\n\n.text-gray-800 {\n  --text-opacity: 1;\n  color: #2d3748;\n  color: rgba(45, 55, 72, var(--text-opacity));\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n\n.tracking-wide {\n  letter-spacing: 0.025em;\n}\n\n.whitespace-no-wrap {\n  white-space: nowrap;\n}\n\n.w-4 {\n  width: 1rem;\n}\n\n.w-6 {\n  width: 1.5rem;\n}\n\n.w-32 {\n  width: 8rem;\n}\n\n.w-4\\/5 {\n  width: 80%;\n}\n\n.w-full {\n  width: 100%;\n}\n\n.gap-4 {\n  grid-gap: 1rem;\n  gap: 1rem;\n}\n\n.transition {\n  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;\n}\n\n.duration-100 {\n  transition-duration: 100ms;\n}\n\n@media (min-width: 768px) {\n  .md\\:grid-cols-3 {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n}\n\n@media (min-width: 1024px) {\n  .lg\\:grid-cols-4 {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n}\n\nbody {\n  background-color: var(--color-background);\n}\n',""]),module.exports=exports},924:function(module,exports,__webpack_require__){var api=__webpack_require__(528),content=__webpack_require__(925);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},925:function(module,exports,__webpack_require__){(exports=__webpack_require__(529)(!1)).push([module.i,"/* You can add global styles to this file, and also import other style files */\n",""]),module.exports=exports}},[[533,1,2]]]);
//# sourceMappingURL=main.7af203310328bdf60ad8.bundle.js.map